//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "AnalyticsViewProtocol-Protocol.h"
#import "CustomPopTransitioning-Protocol.h"
#import "PagedTabControllerProtocol-Protocol.h"

@class CustomPopTransitionInteractor, NSDictionary, NSNumber, NSString, NSURL, UIImage, UIScrollView, UIView;

@interface BaseViewController : UIViewController <CustomPopTransitioning, AnalyticsViewProtocol, PagedTabControllerProtocol>
{
    _Bool _isViewCurrentlyDisplayed;
    _Bool _prefersTabBarHidden;
    BaseViewController *_parentContentViewController;
    NSURL *_analyticsReferringURL;
    NSString *_analyticsReason;
    NSString *_analyticsCorrelationKey;
    NSString *_analyticsSource;
    UIImage *_pageItemImage;
    UIImage *_pageItemSelectedImage;
    NSString *_pageItemText;
    NSString *_pageItemId;
    NSNumber *_viewDidAppearTimestamp;
    UIView *_fakeNavBarView;
    CustomPopTransitionInteractor *_customPopTransitionInteractor;
}

@property(retain, nonatomic) CustomPopTransitionInteractor *customPopTransitionInteractor; // @synthesize customPopTransitionInteractor=_customPopTransitionInteractor;
@property(retain, nonatomic) UIView *fakeNavBarView; // @synthesize fakeNavBarView=_fakeNavBarView;
@property(retain, nonatomic) NSNumber *viewDidAppearTimestamp; // @synthesize viewDidAppearTimestamp=_viewDidAppearTimestamp;
@property(copy, nonatomic) NSString *pageItemId; // @synthesize pageItemId=_pageItemId;
@property(copy, nonatomic) NSString *pageItemText; // @synthesize pageItemText=_pageItemText;
@property(retain, nonatomic) UIImage *pageItemSelectedImage; // @synthesize pageItemSelectedImage=_pageItemSelectedImage;
@property(retain, nonatomic) UIImage *pageItemImage; // @synthesize pageItemImage=_pageItemImage;
@property(copy, nonatomic) NSString *analyticsSource; // @synthesize analyticsSource=_analyticsSource;
@property(copy, nonatomic) NSString *analyticsCorrelationKey; // @synthesize analyticsCorrelationKey=_analyticsCorrelationKey;
@property(copy, nonatomic) NSString *analyticsReason; // @synthesize analyticsReason=_analyticsReason;
@property(copy, nonatomic) NSURL *analyticsReferringURL; // @synthesize analyticsReferringURL=_analyticsReferringURL;
@property(nonatomic) _Bool prefersTabBarHidden; // @synthesize prefersTabBarHidden=_prefersTabBarHidden;
@property(nonatomic) _Bool isViewCurrentlyDisplayed; // @synthesize isViewCurrentlyDisplayed=_isViewCurrentlyDisplayed;
@property(nonatomic) __weak BaseViewController *parentContentViewController; // @synthesize parentContentViewController=_parentContentViewController;
- (void).cxx_destruct;
- (void)addFakeNavBarViewAsSubview;
- (void)configureNavigationBarAppearance;
- (void)navigateToViewController:(id)arg1;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSDictionary *analyticsScrollEventParameters;
@property(readonly, nonatomic) NSDictionary *analyticsScreenViewParameters;
@property(readonly, nonatomic) NSString *analyticsPageType;
@property(readonly, nonatomic) NSString *analyticsScreenViewName;
@property(readonly, nonatomic) _Bool screenViewLoggingEnabled;
- (_Bool)shouldAutorotate;
- (_Bool)attemptScrollMainContentViewToTop;
- (void)didTapBackButton:(id)arg1;
- (void)configureViewAppearance;
- (_Bool)prefersNavigationBarHidden;
@property(readonly, nonatomic) struct UIEdgeInsets basePreferredContentInset;
@property(readonly, nonatomic) struct UIEdgeInsets preferredContentInset;
- (struct UIEdgeInsets)preferredContentInsetWithHorizontalPadding;
- (struct UIEdgeInsets)preferredContentInsetWithHorizontalPaddingForSize:(struct CGSize)arg1;
- (_Bool)allowNonEdgyNavigationPopGesture;
@property(readonly, nonatomic) UIView *majorContentView;
- (long long)preferredStatusBarStyle;
- (unsigned long long)supportedInterfaceOrientations;
- (void)calculateAnalyticsReason;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewDidDisappearOffScreen;
- (void)viewDidAppearOnScreen;
- (void)layoutViewsForFrame:(struct CGRect)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)handleAppDidEnterBackgroundIgnoringViewControllerVisibility;
- (void)handleAppDidEnterBackgroundWhenViewControllerIsOnTheTop;
- (void)handleAppDidEnterForegroundIgnoringViewControllerVisibility;
- (void)handleAppDidEnterForegroundWhenViewControllerIsOnTheTop;
- (id)init;
- (void)logDidTapControlNamed:(id)arg1;
- (void)logDidTapSuspendedBannerContentView;
- (void)logDidTapLiveBannerContentView;
- (void)logDidTapViewModeButton;
- (void)logViewModeActionSheetTapIdentifier:(id)arg1;
- (void)logDidTapUpvoteForPost:(id)arg1;
- (void)logDidTapDownvoteForPost:(id)arg1;
- (void)logDidTapShareForPost:(id)arg1;
- (id)presenter;
- (id)feedSelf;
- (_Bool)openMetaPaywall:(id)arg1 forSubreddit:(id)arg2 redditService:(id)arg3;
- (_Bool)openMetaBadgePreviewModal:(id)arg1 forSubreddit:(id)arg2 post:(id)arg3 comment:(id)arg4 redditService:(id)arg5;
- (_Bool)openMetaBadgePreviewModalWithBadges:(id)arg1 forSubreddit:(id)arg2;
- (long long)timeInMillisecondsSinceViewDidAppear;
- (void)sendScrollViewEventFromBackground:(_Bool)arg1;
- (void)sendScreenViewEventFromBackground:(_Bool)arg1;
- (id)analyticsFullParameters;
- (id)screenViewAnalyticsEvent;
- (void)fireDisappearAnalyticsEvents;
- (void)fireAppearAnalyticsEvents;
- (void)observeHlsPlayerEvent:(id)arg1;
- (void)addHlsEventNotificationHandler;
- (id)handleLinkUrl:(id)arg1 fromPost:(id)arg2;
- (_Bool)openUserModModal:(id)arg1 forSubreddit:(id)arg2 withContext:(id)arg3;
- (id)handleLinkUrlOfPost:(id)arg1 feedWebViewControllerDelegate:(id)arg2;
- (void)updateContentScrollViewInsets;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) UIScrollView *majorContentScrollView;
@property(readonly) Class superclass;

@end

