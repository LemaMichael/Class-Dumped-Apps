//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCATElementProvider-Protocol.h"

@class NSMutableDictionary, NSString, SCATAuxiliaryElementManager, SCATElementManagerViewController;

@interface SCATElementManager : NSObject <SCATElementProvider>
{
    SCATElementManagerViewController *_viewController;
    NSMutableDictionary *_auxiliaryElementManagers;
    SCATAuxiliaryElementManager *_currentAuxiliaryElementManager;
}

@property(retain, nonatomic) SCATAuxiliaryElementManager *currentAuxiliaryElementManager; // @synthesize currentAuxiliaryElementManager=_currentAuxiliaryElementManager;
@property(retain, nonatomic) NSMutableDictionary *auxiliaryElementManagers; // @synthesize auxiliaryElementManagers=_auxiliaryElementManagers;
@property(retain, nonatomic) SCATElementManagerViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (long long)roleForElement:(id)arg1;
- (long long)auxiliaryElementCountWithRole:(long long)arg1;
- (id)auxiliaryElementAfter:(id)arg1;
- (id)auxiliaryElementBefore:(id)arg1;
- (id)lastAuxiliaryElementWithRole:(long long)arg1;
- (id)firstAuxiliaryElementWithRole:(long long)arg1;
- (id)previousAuxiliaryElementManagerTo:(id)arg1 role:(long long)arg2 excludeDisabled:(_Bool)arg3;
- (id)nextAuxiliaryElementManagerFrom:(id)arg1 role:(long long)arg2 excludeDisabled:(_Bool)arg3;
- (id)enabledAuxiliaryElementManagersForRoles:(long long)arg1;
- (id)auxiliaryElementManagersForRole:(long long)arg1;
- (id)allAuxiliaryElementManagers;
- (void)removeAuxiliaryElementManagerForAllRoles:(id)arg1;
- (void)appendAuxiliaryElementManager:(id)arg1 withRole:(long long)arg2;
- (void)driver:(id)arg1 willUnfocusFromContext:(id)arg2;
- (void)driver:(id)arg1 didFocusOnContext:(id)arg2 oldContext:(id)arg3;
- (void)driver:(id)arg1 willFocusOnContext:(id)arg2;
- (id)focusContextAfterDrillOutOnGroup:(id)arg1;
- (id)nextFocusContextAfterActivatingKeyboardElement:(id)arg1;
- (id)nextFocusContextAfterDismissingMenuForElement:(id)arg1;
- (void)scannerManager:(id)arg1 nativeFocusElementDidChange:(id)arg2;
- (void)scannerManager:(id)arg1 didActivateElement:(id)arg2;
- (void)didFetchElements:(id)arg1 foundNewElements:(_Bool)arg2 currentFocusContext:(id)arg3 didChangeActiveElementManager:(_Bool)arg4;
- (void)firstResponderDidChange:(id)arg1;
- (void)screenChangingButtonWasPressed:(id)arg1;
- (void)alertDidAppear:(id)arg1;
- (void)screenWillChange:(id)arg1;
- (void)screenDidChange:(id)arg1;
- (void)appTransitionDidOccur:(id)arg1;
- (void)orientationDidChange:(id)arg1;
- (void)closeCurrentScanningContext;
- (_Bool)allowsDwellScanningToAbortAfterTimeout;
- (double)scannerIdleTimeout;
- (_Bool)shouldKeepScannerAwake;
- (id)numberOfItemsInCurrentScanCycle;
- (_Bool)canBeActiveElementManager;
- (_Bool)handleInputAction:(long long)arg1 withElement:(id)arg2;
- (_Bool)allowsDwellSelection;
- (void)redisplayIfNeeded:(_Bool)arg1;
- (void)hideIfNeeded:(_Bool)arg1;
- (void)scannerWillMakeManagerInactive:(id)arg1;
- (void)scannerWillMakeManagerActive:(id)arg1;
- (_Bool)containsElement:(id)arg1;
- (void)didFinishProvidingElements;
- (void)willBeginProvidingElements;
- (id)elementBefore:(id)arg1 didWrap:(_Bool *)arg2 options:(int *)arg3;
- (id)elementAfter:(id)arg1 didWrap:(_Bool *)arg2 options:(int *)arg3;
- (id)lastElementWithOptions:(int *)arg1;
- (id)firstElementWithOptions:(int *)arg1;
@property(readonly, nonatomic) _Bool providesElements;
- (id)siblingOfElement:(id)arg1 inDirection:(long long)arg2 didWrap:(_Bool *)arg3 options:(int *)arg4;
- (_Bool)isGestureDrawingElementManager;
- (_Bool)isGestureProviderElementManager;
- (_Bool)isPointPickerElementManager;
- (_Bool)isAppleTVRemoteElementManager;
- (_Bool)isMenuElementManager;
- (_Bool)isElementNavElementManager;
@property(readonly, nonatomic) NSString *identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

