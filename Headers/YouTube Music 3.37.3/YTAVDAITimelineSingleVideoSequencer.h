//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "YTPlaybackTimelineObserver-Protocol.h"
#import "YTSingleVideoControllerVideoSequencerDelegate-Protocol.h"
#import "YTSingleVideoSequencer-Protocol.h"

@class GIMMe, NSMutableDictionary, NSString, YTAVDAIMediaTimelineProvider, YTPlaybackConfig, YTPlaybackData, YTPlaybackTimeline, YTPlayerTransition, YTPlayerView, YTSingleVideoController;
@protocol MLViewportSizeProvider, YTSingleVideoControllerDelegate, YTSingleVideoSequencerDelegate;

@interface YTAVDAITimelineSingleVideoSequencer : NSObject <YTSingleVideoControllerVideoSequencerDelegate, YTPlaybackTimelineObserver, YTSingleVideoSequencer>
{
    id <YTSingleVideoSequencerDelegate> _delegate;
    id <YTSingleVideoControllerDelegate> _videoControllerDelegate;
    YTPlayerView *_playerView;
    id <MLViewportSizeProvider> _viewportSizeProvider;
    YTPlaybackData *_contentPlaybackData;
    YTPlayerTransition *_playerTransition;
    YTPlaybackConfig *_playbackConfig;
    NSMutableDictionary *_videoControllersByCPN;
    YTAVDAIMediaTimelineProvider *_mediaTimelineProvider;
    double _userIntentToPlayTime;
    YTSingleVideoController *_activeVideoController;
    YTSingleVideoController *_contentVideoController;
    YTPlaybackTimeline *_playbackTimeline;
    GIMMe *_gimme;
}

@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(readonly, nonatomic) YTPlaybackTimeline *playbackTimeline; // @synthesize playbackTimeline=_playbackTimeline;
@property(readonly, nonatomic) YTSingleVideoController *contentVideoController; // @synthesize contentVideoController=_contentVideoController;
@property(readonly, nonatomic) YTSingleVideoController *activeVideoController; // @synthesize activeVideoController=_activeVideoController;
- (void).cxx_destruct;
- (void)replaySingleVideoController:(id)arg1;
- (id)singleVideoControllerForCPN:(id)arg1;
- (void)removeSingleVideoController:(id)arg1;
- (void)addSingleVideoController:(id)arg1;
- (void)shutDownAndRemoveAllVideos;
- (_Bool)hasContentDataBeenLoaded;
- (_Bool)isAVideoActive;
- (void)suspendActiveVideoController;
- (void)setAndActivateVideoController:(id)arg1 withTimelineSection:(id)arg2;
- (void)playbackTimeline:(id)arg1 wasUpdatedWithNewSegments:(id)arg2;
- (void)singleVideoController:(id)arg1 mediaPlayerDidSwitchToTimelineSection:(id)arg2 absoluteTime:(double)arg3;
- (void)singleVideoController:(id)arg1 rawMediaPlayerStateDidChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)reactivateSuspendedAd;
- (void)suspendAd;
- (void)initializeSuspendedAdWithAdInterrupt:(id)arg1 transition:(id)arg2;
- (void)reloadActiveVideoControllerMediaPlayer;
- (id)registerAdInterrupt:(id)arg1;
- (id)shutDownAd;
- (void)activateAdWithAdInterrupt:(id)arg1 transition:(id)arg2;
- (void)loadFirstVideoInContentSequenceIntoInactiveState;
- (void)suspendContentSequence;
- (_Bool)hasUpcomingContentPlaybackData;
- (void)setUpcomingContentPlaybackData:(id)arg1 initialContentTime:(CDStruct_d60ef703)arg2 playerTransition:(id)arg3 playbackConfig:(id)arg4;
- (void)seekToEndOfActiveVideo;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (void)seekToProductionTime:(double)arg1;
- (void)replayActiveVideo;
- (void)stopDAIAndReloadMediaPlayer;
- (void)restartContentSequence;
- (void)activateContentSequence;
- (void)setContentPlaybackData:(id)arg1 initialContentTime:(CDStruct_d60ef703)arg2 playerTransition:(id)arg3 playbackConfig:(id)arg4 prebufferedContentVideo:(id)arg5 userIntentToPlayTime:(double)arg6;
- (void)shutDown;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 videoControllerDelegate:(id)arg2 playerView:(id)arg3 viewportSizeProvider:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

