//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GIMMe, MLPlayerStickySettings, NSError, YTPlayabilityResolutionUserActionRequest, YTPlaybackData, YTPlaybackDataLoader, YTPlayerTransition;
@protocol MLViewportSizeProvider, YTPlayerViewControllerConfig, YTVideoResolverDelegate;

@interface YTVideoResolver : NSObject
{
    id <MLViewportSizeProvider> _viewportSizeProvider;
    MLPlayerStickySettings *_mediaStickySettings;
    id <YTPlayerViewControllerConfig> _config;
    YTPlaybackData *_playbackData;
    YTPlaybackDataLoader *_playbackDataLoader;
    GIMMe *_gimme;
    long long _state;
    YTPlayerTransition *_playerTransition;
    double _intentToPlayTime;
    NSError *_error;
    YTPlayabilityResolutionUserActionRequest *_userActionRequest;
    YTPlaybackData *_originalPlaybackData;
    long long _resolvedReason;
    id <YTVideoResolverDelegate> _delegate;
}

+ (id)maybeExtractTrailerIfContentUnplayable:(id)arg1;
@property(nonatomic) __weak id <YTVideoResolverDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long resolvedReason; // @synthesize resolvedReason=_resolvedReason;
@property(readonly, nonatomic) YTPlaybackData *originalPlaybackData; // @synthesize originalPlaybackData=_originalPlaybackData;
@property(readonly, nonatomic) YTPlaybackData *playbackData; // @synthesize playbackData=_playbackData;
@property(readonly, nonatomic) YTPlayabilityResolutionUserActionRequest *userActionRequest; // @synthesize userActionRequest=_userActionRequest;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) double intentToPlayTime; // @synthesize intentToPlayTime=_intentToPlayTime;
@property(readonly, nonatomic) YTPlayerTransition *playerTransition; // @synthesize playerTransition=_playerTransition;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (void).cxx_destruct;
- (id)newPlayerRequestForPlayabilityResolutionWithContentCheckOk:(_Bool)arg1 adultContentOk:(_Bool)arg2 playerRequestParams:(id)arg3;
- (void)logInteractionLoggingPlaybackAssociationWithCPN:(id)arg1;
- (_Bool)isResolvingOfflineVideo;
- (_Bool)isAppInBackground;
- (void)sendTimingEventForPlayerRequestSend;
- (void)sendTimingEventForEarlyPlayerRequestSend;
- (void)sendTimingEventForDidCompletePlayabilityResolution;
- (void)sendTimingEventForDidReceivePlayerResponse;
- (_Bool)videoMustBeBackgroundable;
- (_Bool)refreshingExpiredPlaybackData;
- (_Bool)incrementAutoplays;
- (_Bool)allowAutoplayIfUnplayable;
- (void)handlePlayabilityUserActionCompletionWithContentCheckOk:(_Bool)arg1 adultContentOk:(_Bool)arg2 koreanAgeVerificationComplete:(_Bool)arg3;
- (void)requestUserActionForPlayabilityResolution;
- (long long)resolverActionForPlaybackData:(id)arg1;
- (void)resolvePlayability;
- (void)didLoadVideoWithPlaybackData:(id)arg1;
- (void)resolveVideoWithReason:(long long)arg1;
- (void)failWithError:(id)arg1;
- (void)changeToState:(long long)arg1;
- (void)cancelVideoResolution;
- (void)resolveVideoWithPrefetchContext:(id)arg1;
- (void)earlyFetchPlayerDataWithVisibility:(int)arg1;
- (id)initWithPlayerTransition:(id)arg1 delegate:(id)arg2 viewportSizeProvider:(id)arg3 mediaStickySettings:(id)arg4;

@end

