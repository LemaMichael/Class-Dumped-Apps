//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "YTEntityStore-Protocol.h"
#import "YTEntityStore_Private-Protocol.h"
#import "YTSystemNotificationsObserver-Protocol.h"
#import "YTUserChangedObserver-Protocol.h"

@class GIMMe, NSArray, NSMapTable, NSMutableDictionary, NSString, YTEntityStoreObservers, YTSQLiteDatabase;
@protocol OS_dispatch_queue, YTEntitiesLogger, YTIdentityProvider;

@interface YTEntityStoreImpl : NSObject <YTUserChangedObserver, YTSystemNotificationsObserver, YTEntityStore, YTEntityStore_Private>
{
    NSObject<OS_dispatch_queue> *_lockingQueue;
    NSMutableDictionary *_data;
    YTSQLiteDatabase *_inMemoryQueryDB;
    unordered_set_da619913 _hasPersistedEntityTypes;
    YTSQLiteDatabase *_persistentDB;
    YTEntityStoreObservers *_observers;
    id <YTIdentityProvider> _identityProvider;
    id <YTEntitiesLogger> _logger;
    NSString *_currentDataSyncID;
    NSMapTable *_entityMergers;
    NSArray *_queryTableDefinitions;
    struct unordered_map<long long, id<YTEntityStoreQueryTable>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, id<YTEntityStoreQueryTable>>>> _entityTypeToQueryTable;
    _Bool _hadQueryTableSetupError;
    _Bool _enableEntityEviction;
    double _minimumEntityKeepUtilInterval;
    _Bool _enableMemoryWarningEviction;
    _Bool _enableLogger;
    _Bool _enableEntityBatchUpdateTimestampChecks;
    _Bool _enableUpdateOperations;
    _Bool _enableQuerySupport;
    GIMMe *_gimme;
}

+ (id)entityKeySetForPendingEdits:(id)arg1;
+ (id)entityDataRowFromResultSet:(id)arg1;
+ (id)fetchQueryStringForParamCount:(unsigned long long)arg1;
+ (id)notifyRemovalForKeyBasedObservers:(id)arg1 classBasedObservers:(id)arg2 data:(id)arg3;
+ (void)clearPersistentResources;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)db;
- (void)wipe;
- (void)lockedForOpening:(CDUnknownBlockType)arg1;
- (void)lockedForWriting:(CDUnknownBlockType)arg1;
- (void)lockedForReading:(CDUnknownBlockType)arg1;
- (_Bool)hasValidQueryTableDefinitions;
- (id)getQueryTableForEntityType:(long long)arg1;
- (_Bool)isQueryingEnabled;
- (_Bool)tryDestructiveDatabaseOpen:(id)arg1;
- (void)deleteResourcesExcludingPrefixes:(id)arg1;
- (void)deleteResourcesForRemovedUsers;
- (void)reportActionType:(int)arg1 error:(id)arg2;
- (id)promoteEntitiesForEdits:(id)arg1;
- (id)internalUpdateInMemoryQueryTable:(id)arg1 entity:(id)arg2;
- (id)internalRemoveEntitiesInMemoryQueryDatabase:(id)arg1;
- (id)internalRemoveEntityInMemoryQueryTable:(id)arg1 entityKey:(id)arg2;
- (void)migrateQueryTablePersistentEntityData:(id)arg1 database:(id)arg2;
- (void)setupPersistedQueryTables;
- (void)setupInMemoryQueryTables;
- (void)collectPersistedEntityTypes;
- (id)filterHasPersistedKeys:(id)arg1;
- (void)addPossiblyPersistedEntityType:(long long)arg1;
- (_Bool)hasPersistedEntityForEntityType:(long long)arg1;
- (void)internalOpenDatabaseForCurrentUser;
- (void)openDatabaseForCurrentUser;
- (CDUnknownBlockType)getRemoveTransactionBlockForEntity:(id)arg1 startPersistingTypesInEdit:(const unordered_set_da619913 *)arg2;
- (CDUnknownBlockType)getAddReplaceTransactionBlockForEntity:(id)arg1 batchUpdateTimestamp:(double)arg2 options:(unsigned int)arg3 startPersistingTypesInEdit:(const unordered_set_da619913 *)arg4;
- (id)getPersistentEntitiesForKeys:(id)arg1 error:(id *)arg2;
- (id)getPersistentEntityForKey:(id)arg1 batchUpdateTimestamp:(double *)arg2 error:(id *)arg3;
- (id)executeQuery:(id)arg1 database:(id)arg2 error:(id *)arg3;
- (id)internalFetchEntityKeysForQuery:(id)arg1 error:(id *)arg2;
- (void)internalFetchEntitiesForKeys:(id)arg1 inMemoryEntities:(id *)arg2 persistentEntities:(id *)arg3 error:(id *)arg4;
- (id)internalPromoteAndFetchEntityForKey:(id)arg1 error:(id *)arg2;
- (void)internalSetEntryAndReachableAssociationsAsNonEvictable:(id)arg1 possiblyEvictableEntities:(id)arg2 nonEvictableEntityKeys:(id)arg3;
- (_Bool)internalIsEntityStoreEntryEvictable:(id)arg1 onDate:(id)arg2;
- (id)internalEvictEntitiesWithError:(id *)arg1;
- (id)notifyObserversOfEntityStoreChanges:(id)arg1;
- (id)internalUserDidChange;
- (id)internalRemoveEntityForKey:(id)arg1 persistentCommitBlocks:(id)arg2 startPersistingTypesInEdit:(const unordered_set_da619913 *)arg3 error:(id *)arg4;
- (id)internalAddEntity:(id)arg1 options:(unsigned int)arg2 keepUntil:(id)arg3 batchUpdateTimestamp:(double)arg4 persistentCommitBlocks:(id)arg5 startPersistingTypesInEdit:(const unordered_set_da619913 *)arg6 error:(id *)arg7;
- (id)enforceCorrectIdentity;
- (_Bool)isStoreIdentityEqualToActiveIdentity;
- (void)queryEntities:(id)arg1 callbackQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)appDidReceiveMemoryWarning:(id)arg1;
- (void)userDidChange;
- (void)removeEntityStoreObserver:(id)arg1;
- (void)removeEntityStoreObserver:(id)arg1 fromClass:(Class)arg2;
- (void)removeEntityStoreObserver:(id)arg1 fromKey:(id)arg2;
- (void)addEntityStoreObserver:(id)arg1 toClass:(Class)arg2 options:(unsigned long long)arg3;
- (void)addEntityStoreObserver:(id)arg1 toKey:(id)arg2 options:(unsigned long long)arg3;
- (void)commitPendingEdits:(id)arg1 callbackQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)edit;
- (void)entitiesForKeys:(id)arg1 callbackQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)entitiesForKeys:(id)arg1 error:(id *)arg2;
- (id)entityForKey:(id)arg1 error:(id *)arg2;
- (id)migrations;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

