//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "NFUIExternalDevicePickerProtocol-Protocol.h"
#import "NFUIFullPlayerViewControllerDelegate-Protocol.h"
#import "NFUIPlayerControllerDelegate-Protocol.h"
#import "NFUIPlayerControlsDelegate-Protocol.h"
#import "NFUIPlayerScrubberDelegate-Protocol.h"
#import "NFUIRemotePlayerControlsDelegate-Protocol.h"
#import "NFUISkipIntroRecapButtonViewDelegate-Protocol.h"
#import "NFUISystemVolumeProtocol-Protocol.h"
#import "NFUITouchGestureDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class CAGradientLayer, NFUIPlayerCSLogger, NFUIPlayerControlsFooterViewRefresh, NFUIPlayerControlsHeaderViewRefresh, NFUIPlayerControlsMainView, NFUIPlayerControlsModel, NFUIPlayerRefreshConfig, NFUIPreviewsLoadingView, NFUIRemotePlayerControlsController, NFUISkipIntroRecapButtonView, NFUISystemVolumeViewRefresh, NFUITrickPlayController, NSDictionary, NSLayoutConstraint, NSNumber, NSString, NSTimer, UIActivityIndicatorView, UIButton, UIImpactFeedbackGenerator, UIPinchGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol NFUIPlayerControllerProtocol, NFUIPlayerControlsDelegate;

@interface NFUIPlayerControlsRefreshViewController : UIViewController <UIGestureRecognizerDelegate, NFUIPlayerScrubberDelegate, NFUIExternalDevicePickerProtocol, NFUISystemVolumeProtocol, NFUIFullPlayerViewControllerDelegate, NFUIPlayerControllerDelegate, NFUIPlayerControlsDelegate, NFUIRemotePlayerControlsDelegate, NFUITouchGestureDelegate, NFUISkipIntroRecapButtonViewDelegate>
{
    _Bool _isShowingVolumeSlider;
    _Bool _isReadyForVolumeDisplay;
    _Bool _controlsHidden;
    _Bool _isFirstAppearance;
    _Bool _isTrickplayActive;
    _Bool _didBeginPlayback;
    NFUIPlayerControlsHeaderViewRefresh *headerControlsView;
    NFUIPlayerControlsFooterViewRefresh *footerControlsView;
    NFUIPlayerControlsMainView *mainControlsView;
    NFUIRemotePlayerControlsController *remotePlayerController;
    NFUISkipIntroRecapButtonView *_skipRecapButtonView;
    UIActivityIndicatorView *_activityIndicatorView;
    id <NFUIPlayerControlsDelegate> _delegate;
    id <NFUIPlayerControllerProtocol> _playerController;
    NFUIPlayerControlsModel *_model;
    NSTimer *_autoHideControlsTimer;
    NFUIPlayerCSLogger *_csLogger;
    NFUIPlayerRefreshConfig *_playerConfig;
    UIView *_headerContainer;
    UIView *_footerContainer;
    UIView *_mainContainer;
    UIView *_shim;
    CAGradientLayer *_shimLayer;
    NSLayoutConstraint *_skipRecapBottomConstraint;
    NSLayoutConstraint *_skipRecapTrailingConstraint;
    NSLayoutConstraint *_footerBottomConstraint;
    NSLayoutConstraint *_footerHeightConstraint;
    NSLayoutConstraint *_mainBottomConstraint;
    NSLayoutConstraint *_headerTopConstraint;
    NSLayoutConstraint *_volumeContainerLeadingConstraint;
    NSLayoutConstraint *_volumeContainerTrailingConstraint;
    NSLayoutConstraint *_volumeContainerTopConstraint;
    UIView *_volumeContainer;
    NFUISystemVolumeViewRefresh *_volumeSlider;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    UIImpactFeedbackGenerator *_feedbackGenerator;
    NFUITrickPlayController *_trickPlayController;
    double _seekInitialPosition;
    NSNumber *_seekInitialPositionObject;
    double _seekStartPosition;
    double _lastHapticFiredTime;
    double _cumulativeRewindSkipInterval;
    double _cumulativeForwardSkipInterval;
    CDUnknownBlockType _seekingCompletionBlock;
    CDUnknownBlockType _seekingFailureBlock;
    NFUIPreviewsLoadingView *_loadingView;
    UIButton *_accessibilityControlsToggle;
}

@property(retain, nonatomic) UIButton *accessibilityControlsToggle; // @synthesize accessibilityControlsToggle=_accessibilityControlsToggle;
@property(nonatomic) _Bool didBeginPlayback; // @synthesize didBeginPlayback=_didBeginPlayback;
@property(retain, nonatomic) NFUIPreviewsLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(copy, nonatomic) CDUnknownBlockType seekingFailureBlock; // @synthesize seekingFailureBlock=_seekingFailureBlock;
@property(copy, nonatomic) CDUnknownBlockType seekingCompletionBlock; // @synthesize seekingCompletionBlock=_seekingCompletionBlock;
@property(nonatomic) _Bool isTrickplayActive; // @synthesize isTrickplayActive=_isTrickplayActive;
@property(nonatomic) _Bool isFirstAppearance; // @synthesize isFirstAppearance=_isFirstAppearance;
@property(nonatomic) double cumulativeForwardSkipInterval; // @synthesize cumulativeForwardSkipInterval=_cumulativeForwardSkipInterval;
@property(nonatomic) double cumulativeRewindSkipInterval; // @synthesize cumulativeRewindSkipInterval=_cumulativeRewindSkipInterval;
@property(nonatomic) double lastHapticFiredTime; // @synthesize lastHapticFiredTime=_lastHapticFiredTime;
@property(nonatomic) double seekStartPosition; // @synthesize seekStartPosition=_seekStartPosition;
@property(retain, nonatomic) NSNumber *seekInitialPositionObject; // @synthesize seekInitialPositionObject=_seekInitialPositionObject;
@property(nonatomic) double seekInitialPosition; // @synthesize seekInitialPosition=_seekInitialPosition;
@property(retain, nonatomic) NFUITrickPlayController *trickPlayController; // @synthesize trickPlayController=_trickPlayController;
@property(retain, nonatomic) UIImpactFeedbackGenerator *feedbackGenerator; // @synthesize feedbackGenerator=_feedbackGenerator;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapGestureRecognizer; // @synthesize singleTapGestureRecognizer=_singleTapGestureRecognizer;
@property(nonatomic) _Bool controlsHidden; // @synthesize controlsHidden=_controlsHidden;
@property(nonatomic) _Bool isReadyForVolumeDisplay; // @synthesize isReadyForVolumeDisplay=_isReadyForVolumeDisplay;
@property(nonatomic) _Bool isShowingVolumeSlider; // @synthesize isShowingVolumeSlider=_isShowingVolumeSlider;
@property(retain, nonatomic) NFUISystemVolumeViewRefresh *volumeSlider; // @synthesize volumeSlider=_volumeSlider;
@property(nonatomic) __weak UIView *volumeContainer; // @synthesize volumeContainer=_volumeContainer;
@property(nonatomic) __weak NSLayoutConstraint *volumeContainerTopConstraint; // @synthesize volumeContainerTopConstraint=_volumeContainerTopConstraint;
@property(nonatomic) __weak NSLayoutConstraint *volumeContainerTrailingConstraint; // @synthesize volumeContainerTrailingConstraint=_volumeContainerTrailingConstraint;
@property(nonatomic) __weak NSLayoutConstraint *volumeContainerLeadingConstraint; // @synthesize volumeContainerLeadingConstraint=_volumeContainerLeadingConstraint;
@property(nonatomic) __weak NSLayoutConstraint *headerTopConstraint; // @synthesize headerTopConstraint=_headerTopConstraint;
@property(nonatomic) __weak NSLayoutConstraint *mainBottomConstraint; // @synthesize mainBottomConstraint=_mainBottomConstraint;
@property(nonatomic) __weak NSLayoutConstraint *footerHeightConstraint; // @synthesize footerHeightConstraint=_footerHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *footerBottomConstraint; // @synthesize footerBottomConstraint=_footerBottomConstraint;
@property(nonatomic) __weak NSLayoutConstraint *skipRecapTrailingConstraint; // @synthesize skipRecapTrailingConstraint=_skipRecapTrailingConstraint;
@property(nonatomic) __weak NSLayoutConstraint *skipRecapBottomConstraint; // @synthesize skipRecapBottomConstraint=_skipRecapBottomConstraint;
@property(retain, nonatomic) CAGradientLayer *shimLayer; // @synthesize shimLayer=_shimLayer;
@property(nonatomic) __weak UIView *shim; // @synthesize shim=_shim;
@property(nonatomic) __weak UIView *mainContainer; // @synthesize mainContainer=_mainContainer;
@property(nonatomic) __weak UIView *footerContainer; // @synthesize footerContainer=_footerContainer;
@property(nonatomic) __weak UIView *headerContainer; // @synthesize headerContainer=_headerContainer;
@property(retain, nonatomic) NFUIPlayerRefreshConfig *playerConfig; // @synthesize playerConfig=_playerConfig;
@property(retain, nonatomic) NFUIPlayerCSLogger *csLogger; // @synthesize csLogger=_csLogger;
@property(retain, nonatomic) NSTimer *autoHideControlsTimer; // @synthesize autoHideControlsTimer=_autoHideControlsTimer;
@property(retain, nonatomic) NFUIPlayerControlsModel *model; // @synthesize model=_model;
@property(nonatomic) __weak id <NFUIPlayerControllerProtocol> playerController; // @synthesize playerController=_playerController;
@property(nonatomic) __weak id <NFUIPlayerControlsDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
@property(retain, nonatomic) NFUISkipIntroRecapButtonView *skipRecapButtonView; // @synthesize skipRecapButtonView=_skipRecapButtonView;
@property(retain, nonatomic) NFUIRemotePlayerControlsController *remotePlayerController; // @synthesize remotePlayerController;
@property(retain, nonatomic) NFUIPlayerControlsMainView *mainControlsView; // @synthesize mainControlsView;
@property(retain, nonatomic) NFUIPlayerControlsFooterViewRefresh *footerControlsView; // @synthesize footerControlsView;
@property(retain, nonatomic) NFUIPlayerControlsHeaderViewRefresh *headerControlsView; // @synthesize headerControlsView;
- (void).cxx_destruct;
- (CDUnknownBlockType)seekInitialPositionThunk;
- (_Bool)accessibilityPerformEscape;
- (_Bool)accessibilityPerformMagicTap;
- (void)voiceOverStatusChanged:(id)arg1;
- (void)configureA11yControlButton;
- (void)showHeaderForAdvisory:(_Bool)arg1;
- (void)hideHeaderForAdvisory:(_Bool)arg1;
- (_Bool)shouldHideVolumeView:(id)arg1;
- (_Bool)sholdIgnoreChangesInVolumeView:(id)arg1;
- (void)didFinishAdjustingVolumeInView:(id)arg1;
- (void)didAdjustVolumeInView:(id)arg1;
- (void)toggleRotation:(id)arg1;
- (void)setActivityIndicatorVisible:(_Bool)arg1;
- (void)setSeekControlsEnabled:(_Bool)arg1;
- (void)hideLoadingState;
- (void)showLoadingState;
- (void)animateMainControlsFirstAppearanceAnimated:(_Bool)arg1;
- (void)setActivityIndicatorVisibleWithState:(unsigned long long)arg1;
- (void)initActivityIndicatorView;
- (_Bool)isActivityIndicatorVisible;
- (void)cancelAutoHideControlsTimer;
- (void)startAutoHideControlsTimer;
- (void)informDelegateControlsDidShow;
- (void)informDelegateControlsDidHide;
- (void)hideControlsSubviews:(id)arg1 animated:(_Bool)arg2;
- (void)showControlsSubviews:(id)arg1 animated:(_Bool)arg2;
- (void)hideControlsAnimated:(_Bool)arg1;
- (void)hideControls;
- (void)hideControls:(id)arg1;
- (void)showControls;
- (void)fireHapticImpactFeedback;
- (void)skipIntroTapped;
- (void)skipRecapTapped;
- (void)scaleAction:(id)arg1;
- (void)MDXPrimaryAction:(id)arg1;
- (void)shareAction:(id)arg1;
- (void)skipRecapAction:(id)arg1;
- (void)nextEpisodeAction:(id)arg1;
- (void)subsAndDubsAction:(id)arg1;
- (void)episodesAction:(id)arg1;
- (void)rewindAction:(id)arg1;
- (void)forwardAction:(id)arg1;
- (void)playPauseAction:(id)arg1;
- (void)togglePlaybackWithNoLogging;
- (void)togglePlayback;
- (void)closeAction:(id)arg1;
- (void)playOnTVAction:(id)arg1;
- (void)endScrubbing;
- (void)beginScrubbing;
- (double)centerXForTrickPlay;
- (void)scrubberValueDidChange:(id)arg1;
- (void)controlAction:(id)arg1;
- (void)seekToTimeIntervalAfterDelay:(id)arg1;
- (void)seekToTimeInterval:(double)arg1;
- (void)forwardByTimeInterval:(double)arg1;
- (void)rewindByTimeInterval:(double)arg1;
- (void)resetCumulativeSkipIntervalFastForward;
- (void)resetCumulativeSkipIntervalRewind;
- (void)fastForward;
- (void)rewind;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)didPinchWithGestureRecognizer:(id)arg1;
- (void)didDoubleTapWithGestureRecognizer:(id)arg1;
- (void)didSingleTapWithGestureRecognizer:(id)arg1;
- (void)remoteControlAction:(long long)arg1;
- (void)playerController:(id)arg1 externalPlaybackActive:(_Bool)arg2;
- (void)playerController:(id)arg1 timeUpdate:(double)arg2;
- (void)playerController:(id)arg1 stateChange:(unsigned long long)arg2 previous:(unsigned long long)arg3;
- (void)playerControllerReady:(id)arg1;
- (void)configureWithModel:(id)arg1;
- (id)audioSubtitlesButton;
- (void)setEpisodesButtonEnabled:(_Bool)arg1;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)addShimGradient;
- (void)initVolumeControlView;
- (void)initSkipRecapIntroButtonView;
- (void)initMainControlsView;
- (void)initFooterControlsView;
- (void)initHeaderControlsView;
- (void)configureViewForAB;
- (void)viewWillLayoutSubviews;
- (void)commonInit;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 playerConfig:(id)arg3;

// Remaining properties
@property(readonly, nonatomic) NSDictionary *aspectDetails;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

