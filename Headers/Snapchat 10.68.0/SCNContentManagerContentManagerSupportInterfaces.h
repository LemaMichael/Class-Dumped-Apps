//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCNContentManagerContentManagerSupportInterfaces-Protocol.h"

@class NSDictionary, NSSet, NSString, SCFeatureSettingsManager, SCManagedDatastoreCollector, SCNGrapheneClientMetricsProcessor, SCQueuePerformer;
@protocol SCNContentManagerBlizzardLoggerInterface, SCNContentManagerInterimPayloadProcessor, SCNNetworkManagerNetworkManager, SCNShimsDataProviderFactory;

@interface SCNContentManagerContentManagerSupportInterfaces : NSObject <SCNContentManagerContentManagerSupportInterfaces>
{
    long long _cacheSizeLimitInMB;
    NSDictionary *_cacheManagers;
    NSDictionary *_oldCaches;
    id <SCNContentManagerInterimPayloadProcessor> _payloadProcessor;
    id <SCNNetworkManagerNetworkManager> _networkManager;
    SCNGrapheneClientMetricsProcessor *_clientMetricsProcessor;
    id <SCNShimsDataProviderFactory> _dataProviderFactory;
    NSDictionary *_isMediaContextUsingContentManagerMap;
    NSString *_dbLocation;
    NSSet *_streamingEnabledMediaContextTypeSet;
    SCFeatureSettingsManager *_featureSettingsManager;
    SCManagedDatastoreCollector *_managedDatastoreCollector;
    SCQueuePerformer *_queuePerformer;
    id <SCNContentManagerBlizzardLoggerInterface> _blizzardLogger;
    NSString *_userId;
    long long _initialChunkSizeInKBForStreaming;
    long long _cacheChunkSizeInKBForStreaming;
    _Bool _useListOfQueues;
    long long _numberOfQueuesPerMediaContextType;
    long long _timeInHoursAfterConsumptionToExpireStoryContent;
    _Bool _shouldDelayProgressiveDownload;
    _Bool _useNewRemoveMethod;
    _Bool _useUnzipOnDownloadState;
    _Bool _shouldAllowReRegister;
    _Bool _shouldLoadCachePolicyFromServer;
}

- (void).cxx_destruct;
- (_Bool)getShouldEnableResumableDownloads;
- (_Bool)getShouldUseNewContentStreamer;
- (_Bool)getShouldLoadCachePolicyFromServer;
- (_Bool)getShouldAllowReRegister;
- (_Bool)getShouldUseUnzipOnDownloadState;
- (_Bool)getShouldUseNewRemoveExpiredContent;
- (_Bool)getShouldDelayProgressiveDownload;
- (long long)getTimeInHoursAfterConsumptionToExpireStoryContent;
- (long long)getNumberOfQueuesPerMediaContextType;
- (_Bool)getShouldUseMultipleQueuesPerMediaContextType;
- (long long)getCacheChunkSizeInKBForStreaming;
- (long long)getInitialChunkSizeInKBForStreaming;
- (id)getUserId;
- (long long)getContentStateDeletionAgeInDays;
- (id)getBlizzardEventLogger;
- (void)platformAssertFail:(id)arg1;
- (_Bool)getIsDataSaverModeEnabled;
- (id)getStreamingEnabledMediaContextTypeSet;
- (id)getDBLocation;
- (id)getIsMediaContextUsingContentManagerMap;
- (id)getDataProviderFactory;
- (id)getClientMetricsProcessor;
- (id)getNetworkManager;
- (id)getPayloadProcessor;
- (void)getUntrackedCaches:(id)arg1;
- (id)getOldCaches;
- (id)getCacheManagers;
- (long long)getCacheSizeLimitInMB;
- (id)initWithCacheSizeLimit:(long long)arg1 withCacheManagers:(id)arg2 withOldCaches:(id)arg3 withPayloadProcessor:(id)arg4 withNetworkManager:(id)arg5 withClientMetricsProcessor:(id)arg6 withDataProviderFactory:(id)arg7 withIsMediaContextUsingContentManagerMap:(id)arg8 withDbLocation:(id)arg9 withStreamingEnabledMediaContextTypeSet:(id)arg10 withFeatureSettingsManager:(id)arg11 withManagedDatastoreCollector:(id)arg12 withBlizzardLogger:(id)arg13 withUserId:(id)arg14 initialChunkSizeInKBForStreaming:(long long)arg15 cacheChunkSizeInKBForStreaming:(long long)arg16 useListOfQueues:(_Bool)arg17 numberOfQueuesPerMediaContextType:(long long)arg18 timeInHoursAfterConsumptionToExpireStoryContent:(long long)arg19 shouldDelayProgressiveDownload:(_Bool)arg20 useNewRemoveContent:(_Bool)arg21 useUnzipOnDownloadState:(_Bool)arg22 shouldAllowReRegister:(_Bool)arg23 shouldLoadCachePolicyFromServer:(_Bool)arg24;

@end

