//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SCOperaPlaylistItemExtraPropertiesProvider-Protocol.h"
#import "SCOperaSession-Protocol.h"
#import "SCTraceEnabled-Protocol.h"

@class CADisplayLink, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, SCAttachmentsLogger, SCOperaEventListenerAnnouncer, SCOperaPerformanceTrackingPlugin, SCOperaViewController, SCStoriesChromeInteractionSession, SCStoriesOperaPlaybackSequence, SCStoriesPlaybackLoggingInfo, SCStoriesReportSession, SCStoriesSharingSession, SCStoriesSnapPlaybackMetadata, SCStoryDiagnosticsLogger, SCStoryUsageLogger, SCStoryUserProperties, SCUnlockableBlizzardLogger, SCUserSession, User;
@protocol NavigationDelegate, SCOperaPlaylistItemController, SCReplyDelegate, SCStartChatDelegate, SCStoriesBlizzardLogging, SCStoriesMediaCoordinating, SCStoriesOperaPageProvider, SCStoriesPlaybackDataProviding;

@interface SCStoriesViewingSession : NSObject <SCTraceEnabled, SCOperaSession, SCOperaPlaylistItemExtraPropertiesProvider>
{
    SCUserSession *_userSession;
    User *_user;
    SCStoryUsageLogger *_usageLogger;
    SCStoryDiagnosticsLogger *_diagnosticsLogger;
    SCAttachmentsLogger *_attachmentsLogger;
    id <SCStoriesBlizzardLogging> _storiesBlizzardLogger;
    SCStoriesPlaybackLoggingInfo *_loggingInfo;
    SCUnlockableBlizzardLogger *_unlockableBlizzardLogger;
    id <SCReplyDelegate> _replyDelegate;
    id <SCStartChatDelegate> _startChatDelegate;
    id <SCStoriesPlaybackDataProviding> _storiesPlaybackDataProvider;
    id <SCStoriesMediaCoordinating> _storiesMediaCoordinator;
    SCStoryUserProperties *_storyUserProperties;
    unsigned long long _previousSessionsUniqueSnapViewCount;
    unsigned long long _previousSessionsTotalSnapViewCount;
    unsigned long long _previousSessionsTotalSnapOpenCount;
    NSMutableSet *_autoAdvanceViewedUsernames;
    SCStoriesSnapPlaybackMetadata *_currentStorySnap;
    SCStoriesChromeInteractionSession *_chromeInteractionSession;
    SCStoriesReportSession *_reportSession;
    SCStoriesSharingSession *_sharingSession;
    _Bool _currentFriendStoriesHaveStartedPlaying;
    _Bool _viewingSessionIsStopped;
    _Bool _isShowingLoadingScreen;
    _Bool _didEnterBackground;
    _Bool _shouldShowTapToolTipsForCurrentStory;
    NSMutableDictionary *_firstStoryDisplayedForUserName;
    id <NavigationDelegate> _navDelegate;
    _Bool _isShowingStoryInterstitial;
    unsigned long long _entryGroupIndex;
    CADisplayLink *_foregroundDisplayLink;
    double _playlistStartSetupViewModelsTimeMs;
    double _playlistSetupViewModelsTimeMs;
    SCOperaPerformanceTrackingPlugin *_performanceTrackingPlugin;
    long long _initialPlaySource;
    long long _snappableInviteAction;
    long long _totalViewedStoriesCount;
    long long _viewLocation;
    long long _sourceViewLocation;
    long long _storyPlayMode;
    _Bool _isFullyViewed;
    _Bool _isTopSnap;
    _Bool _isViewingLongform;
    long long _viewingType;
    unsigned long long _liveStoriesCount;
    unsigned long long _entryReason;
    unsigned long long _defaultStoryViewingActionContext;
    NSMutableArray *_currentFriendStoriesViewingSessions;
    unsigned long long _loadingScreenCount;
    long long _playSource;
    SCOperaEventListenerAnnouncer *_eventAnnouncer;
    id <SCStoriesOperaPageProvider> _operaPageProvider;
    SCStoriesOperaPlaybackSequence *_previousStoriesPlaybackSequenceDisplayed;
    SCOperaViewController *_operaVC;
    unsigned long long _initialFriendsPlayListCount;
    id <SCOperaPlaylistItemController> _playlistItemController;
}

+ (id)announcerIdentifier;
@property(nonatomic) __weak id <SCOperaPlaylistItemController> playlistItemController; // @synthesize playlistItemController=_playlistItemController;
@property(readonly, nonatomic) unsigned long long initialFriendsPlayListCount; // @synthesize initialFriendsPlayListCount=_initialFriendsPlayListCount;
@property(nonatomic) __weak SCOperaViewController *operaVC; // @synthesize operaVC=_operaVC;
@property(readonly, nonatomic) SCStoriesOperaPlaybackSequence *previousStoriesPlaybackSequenceDisplayed; // @synthesize previousStoriesPlaybackSequenceDisplayed=_previousStoriesPlaybackSequenceDisplayed;
@property(nonatomic) __weak id <SCStoriesOperaPageProvider> operaPageProvider; // @synthesize operaPageProvider=_operaPageProvider;
@property(retain, nonatomic) SCOperaEventListenerAnnouncer *eventAnnouncer; // @synthesize eventAnnouncer=_eventAnnouncer;
@property(readonly, nonatomic) long long playSource; // @synthesize playSource=_playSource;
@property(readonly, nonatomic) _Bool isViewingLongform; // @synthesize isViewingLongform=_isViewingLongform;
@property(readonly, nonatomic) unsigned long long loadingScreenCount; // @synthesize loadingScreenCount=_loadingScreenCount;
@property(readonly, nonatomic) _Bool isTopSnap; // @synthesize isTopSnap=_isTopSnap;
@property(readonly, nonatomic) NSMutableArray *currentFriendStoriesViewingSessions; // @synthesize currentFriendStoriesViewingSessions=_currentFriendStoriesViewingSessions;
@property(nonatomic) unsigned long long defaultStoryViewingActionContext; // @synthesize defaultStoryViewingActionContext=_defaultStoryViewingActionContext;
@property(nonatomic) unsigned long long entryReason; // @synthesize entryReason=_entryReason;
@property(nonatomic) unsigned long long liveStoriesCount; // @synthesize liveStoriesCount=_liveStoriesCount;
@property(nonatomic) long long viewingType; // @synthesize viewingType=_viewingType;
- (void).cxx_destruct;
- (id)playlistFriendNames;
- (_Bool)shouldUseExtendedResetToCamera;
- (id)firstDisplayedStorySnapForStoriesPlaybackSequence:(id)arg1;
- (void)extraPropertiesForDataModel:(id)arg1 item:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateOperaConfiguration:(id)arg1;
- (id)initWithUserSession:(id)arg1 user:(id)arg2 replyDelegate:(id)arg3 startChatDelegate:(id)arg4 storiesPlaybackDataProvider:(id)arg5 storiesMediaCoordinator:(id)arg6 storyUserProperties:(id)arg7 storyPlayMode:(long long)arg8 viewLocation:(long long)arg9 viewingType:(long long)arg10 storyViewingActionContext:(unsigned long long)arg11 playSource:(long long)arg12 navigationDelegate:(id)arg13 storiesBlizzardLogger:(id)arg14 unlockableBlizzardLogger:(id)arg15 loggingInfo:(id)arg16;
- (id)_buildStoryStorySessionLogParameters;
- (long long)_playSourceUponOpenOpera;
- (unsigned long long)uniqueViewedAdSnapsCount;
- (unsigned long long)totalViewedAdSnapsCount;
- (unsigned long long)totalViewedAdStoriesCount;
- (unsigned long long)uniqueViewedAdStoriesCount;
- (unsigned long long)totalOpenedSnapsCount;
- (unsigned long long)_totalViewedSnapsCount;
- (unsigned long long)_uniqueViewedSnapsCount;
- (unsigned long long)_uniqueViewedStoriesCount;
- (unsigned long long)finishWaitingReason;
- (id)lastInteraction;
- (long long)exitReason;
- (void)viewWillEnterBackground;
- (void)userDidTakeScreenshot;
- (void)_removeFriendStoryViewingSession:(id)arg1;
- (void)_updateCurrentFriendStoryViewingSessionsWithEvent:(id)arg1 context:(id)arg2;
- (unsigned long long)indexOfStoryRelativeToInitialStorySnap:(id)arg1;
- (unsigned long long)currentFriendStoriesRelativeIndex;
- (unsigned long long)currentFriendStoriesAbsoluteIndex;
- (unsigned long long)currentFriendStoriesViewingSessionLevelIndex;
- (id)currentFriendStoryViewingSession;
- (void)_setupSharingSession;
- (void)_setupReportSession;
- (void)_setupChromeInteractionSession;
- (void)_didStartPlayingStorySnap:(id)arg1 storiesPlaybackSequence:(id)arg2;
- (_Bool)hasSessionEnded;
- (void)_editionDoesDisplaySinceForegroundedApp;
- (void)viewDidEnterBackground;
- (void)viewWillEnterForeground;
- (void)operaViewDidSendEvent:(id)arg1 context:(id)arg2 params:(id)arg3;
- (id)registeredEventsForOperaSession;
- (id)_extraToolTipsPropertiesForStorySnap:(id)arg1;
- (id)extraPropertiesForStorySnap:(id)arg1;
- (void)_markCheetahSwipeLeftInterstitialCompleted;
- (_Bool)_shouldShowCheetahSwipeLeftInterstitial:(id)arg1;
- (void)_incrementTotalViewedStoriesCount;
- (void)_logStoryStoryViewSession;
- (void)_pauseSession;
- (void)stopSession;
- (void)_updateFirstPagePropertyWithTooltipIfNecessary;
- (void)startSession;
- (void)didUpdateFriendsPlaylistCount:(unsigned long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

