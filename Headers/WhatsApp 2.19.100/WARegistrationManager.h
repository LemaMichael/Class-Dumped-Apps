//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDate, NSString, NSUserDefaults, WACellProvider, WADomainFrontingProviderStore, WAKeychainWrapper, WAPhoneNumber, WARecoveryToken, WARegistrationManagerDependencyProvider, XMPPConnectionMain;
@protocol WADeviceDate;

@interface WARegistrationManager : NSObject
{
    WARegistrationManagerDependencyProvider *_provider;
    XMPPConnectionMain *_xmppConnection;
    WAKeychainWrapper *_keychainWrapper;
    NSUserDefaults *_userDefaults;
    _Bool _recoveryTokenUpdateInProgress;
    WACellProvider *_cellProvider;
    WADomainFrontingProviderStore *_domainFrontingProviderStore;
    _Bool _didReachRegistrationDomain;
    NSDate<WADeviceDate> *_lastRegistrationDomainProbeTime;
    WAPhoneNumber *_phoneNumberObj;
}

@property(retain, nonatomic) WAPhoneNumber *phoneNumberObj; // @synthesize phoneNumberObj=_phoneNumberObj;
- (void).cxx_destruct;
- (void)removeRecoveryTokenForPhoneNumber:(id)arg1;
- (void)performOnConnect;
- (void)probeDomainFrontingProvidersIfNecessary;
- (_Bool)beginDomainFrontingRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginFetchWithPreparedURL:(id)arg1 waHostIfProxying:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)absoluteURLStringForPreparedURL:(id)arg1;
- (void)wipeForTwoFactorAuthenticationForPhoneNumber:(id)arg1 countryCode:(id)arg2 wipeToken:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)resetTwoFactorAuthenticationViaEmailForPhoneNumber:(id)arg1 countryCode:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)verifyTwoFactorAuthenticationCode:(id)arg1 phoneNumber:(id)arg2 countryCode:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)registerWithVerificationCode:(id)arg1 entryMethod:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestVerificationCodeUsingMethod:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)performSameDeviceCheckForPhoneNumber:(id)arg1 countryCode:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)urlBuilderForPhoneNumber:(id)arg1 countryCode:(id)arg2;
- (id)urlBuilderForPhoneNumber:(id)arg1;
- (id)offlineABExposures;
- (void)setOfflineABExposures:(id)arg1;
- (void)processVerificationServerResponse:(id)arg1 error:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)processRegistrationJSONResponse:(id)arg1 isChangeNumber:(_Bool)arg2;
- (void)processCertResponseJSONResponse:(id)arg1 isChangeNumber:(_Bool)arg2;
- (void)clearChangeNumberSourcePhoneNumber:(_Bool)arg1;
- (void)saveCurrentPhoneNumberAsChangeNumberSource;
@property(readonly, copy, nonatomic) NSString *changeNumberSourcePhoneNumber;
@property(readonly, copy, nonatomic) NSString *changeNumberSourceCountryCode;
- (void)setChangeNumberSourcePhoneNumberObj:(id)arg1;
@property(readonly, nonatomic) WAPhoneNumber *changeNumberSourcePhoneNumberObj;
- (void)clearVerificationCodePhoneNumber;
- (void)saveCurrentPhoneNumberAsVerificationCodeNumber;
- (void)setVerificationCodePhoneNumberObj:(id)arg1;
@property(readonly, nonatomic) WAPhoneNumber *verificationCodePhoneNumberObj;
@property(readonly, copy, nonatomic) NSString *verificationCodeCountryCode;
@property(readonly, copy, nonatomic) NSString *verificationCodePhoneNumber;
- (void)didUpdatePhoneNumberForSameDeviceCheckFailure;
- (id)fullPhoneNumber:(_Bool)arg1;
- (id)fullPhoneNumber;
- (void)setCountryCode:(id)arg1 phoneNumber:(id)arg2;
@property(readonly, copy, nonatomic) NSString *countryCode;
@property(readonly, copy, nonatomic) NSString *phoneNumber;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)dealloc;
- (id)initWithPhoneNumber:(id)arg1 cellProvider:(id)arg2 xmppConnection:(id)arg3 userDefaults:(id)arg4 keychainWrapper:(id)arg5 provider:(id)arg6;
- (id)initWithPhoneNumber:(id)arg1 cellProvider:(id)arg2 xmppConnection:(id)arg3 userDefaults:(id)arg4 signalManager:(id)arg5;
- (_Bool)reallyUpdateServerRecoveryTokenIfNecessaryForPhoneNumber:(id)arg1;
- (void)handleUpdateRecoveryTokenResponseWithToken:(id)arg1 phoneNumber:(id)arg2 error:(id)arg3;
- (id)recoveryTokenForUpdatingServerForPhoneNumber:(id)arg1;
- (_Bool)isRecoveryTokenValid:(id)arg1;
- (void)cleanupRecoveryTokensForCurrentPhoneNumber:(id)arg1;
- (void)removeV0RecoveryTokenFile;
- (void)removeV0KeychainRecoveryToken;
- (void)removePrivateRecoveryToken;
- (void)removeSharedRecoveryTokenForPhoneNumber:(id)arg1;
- (_Bool)writeSharedRecoveryToken:(id)arg1 phoneNumber:(id)arg2;
- (_Bool)writePrivateRecoveryToken:(id)arg1;
- (id)v0KeychainRecoveryToken;
- (id)sharedRecoveryTokenForPhoneNumber:(id)arg1 canUpdateAccessibilityControl:(_Bool)arg2;
- (id)privateRecoveryToken;
- (id)v0KeychainRecoveryTokenDescriptor;
- (id)sharedRecoveryTokenDescriptorForPhoneNumber:(id)arg1;
- (void)updateServerRecoveryTokenIfNecessaryForPhoneNumber:(id)arg1;
- (void)prepareForRegistrationSessionWithPhoneNumber:(id)arg1;
- (void)internalRemoveRecoveryTokenForPhoneNumber:(id)arg1;
@property(readonly, nonatomic) WARecoveryToken *recoveryToken;

@end

