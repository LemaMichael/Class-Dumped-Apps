//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GMSModelStyleIcon, GMSx_GPBMessage, GPBMessage, NSArray, NSData, NSMutableArray, NSMutableData, NSObject, NSOutputStream, NSString, Protocol;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AESCrypt {
    unsigned char _field1[16];
    unsigned char _field2[16];
    struct aes_key_st _field3;
    int _field4;
};

struct APPWRAPPER {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct AVMDLConfiger {
    struct AVMDLoaderConfig _field1;
    long long _field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
};

struct AVMDLDNSParserImplement {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    _Bool _field3;
    int _field4;
    void *_field5;
    char *_field6;
    char *_field7;
    struct AVMDLNetWorkManager *_field8;
    struct condition_variable _field9;
    long long _field10;
};

struct AVMDLFileManager;

struct AVMDLManager {
    struct AVMDLNetWorkManager *_field1;
    struct AVMDLRingBufferPool *_field2;
    struct AVMDLFileManager *_field3;
    struct AVMDLRequestReceiver *_field4;
    struct AVMDLThreadPool *_field5;
    struct AVMDLUtilFactory *_field6;
    struct AVMDLConfiger _field7;
    struct APPWRAPPER *_field8;
    struct mutex _field9;
};

struct AVMDLNetWorkManager;

struct AVMDLRequestReceiver;

struct AVMDLRingBufferPool;

struct AVMDLThreadPool;

struct AVMDLUtilFactory;

struct AVMDLoaderConfig {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct AVWindow {
    struct UIView *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    id _field16;
    float _field17;
};

struct AV_APPLICATION {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct AbsolutePosition;

struct AddressList {
    struct vector<net::IPEndPoint, std::__1::allocator<net::IPEndPoint>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field2;
    int _field3;
    struct IPAddress _field4;
};

struct AdjustableTextureShaderState;

struct Alignment {
    unsigned char value_;
};

struct AllPassFilter {
    float *_field1;
    int _field2;
    int _field3;
    float _field4;
};

struct ApApp {
    id _field1;
    id _field2;
    void *_field3;
    void *_field4;
    void *_field5;
    CDUnknownFunctionPointerType _field6;
};

struct AppImages {
    unsigned long long _field1;
    CDStruct_183601bc **_field2;
};

struct Arena;

struct ArenaStringPtr {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *ptr_;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int mNumberBuffers;
    struct AudioBuffer mBuffers[1];
};

struct AudioCleaner {
    struct Transform *_field1[2];
    struct Transform *_field2;
    int _field3;
    int _field4;
    int _field5;
    struct FilterNLMS *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    int _field16;
    _Bool _field17;
    float _field18;
    float *_field19;
    float *_field20;
    float *_field21;
    float *_field22;
    float *_field23;
    float *_field24;
    struct COMPLEX_s *_field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    float _field31;
    float _field32;
    float _field33;
    float _field34;
    float _field35;
    float _field36;
    float _field37;
    float _field38;
    float *_field39;
    float *_field40;
    float *_field41;
    float *_field42;
    float *_field43;
    float *_field44;
    float *_field45;
    float *_field46;
    float _field47;
    float _field48;
    int _field49;
    int _field50;
    float _field51;
    float _field52;
    float _field53;
    float _field54;
    float _field55;
    int _field56;
    float _field57;
    float _field58;
    float _field59;
    float _field60;
    float _field61;
    float _field62;
    float _field63;
    float _field64;
    float _field65;
    float _field66;
    float _field67;
    float _field68;
    float _field69;
    float _field70;
    float _field71;
    int _field72;
    int _field73;
    int _field74;
    int _field75;
    int _field76;
    int _field77;
    int _field78;
    int _field79;
    int _field80;
    int _field81;
    int _field82;
    int _field83;
    int _field84;
    float *_field85;
    float *_field86;
    float *_field87;
    float *_field88;
    float *_field89;
    float **_field90;
    unsigned int _field91;
    struct AudioLogger *_field92;
    struct AudioLogger *_field93;
    struct AudioLogger *_field94;
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioEffectFilter {
    int _field1;
    _Bool _field2;
    int _field3;
    _Bool _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    unsigned long long _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    unsigned long long _field17;
    struct PitchTempoAdjuster *_field18;
    void **_field19;
    float **_field20;
};

struct AudioFileDescription {
    struct OpaqueAudioComponentInstance **playerUnit;
    struct OpaqueAudioFileID *audioFile;
    struct __CFURL *fileURL;
    unsigned char recordFlag;
    double timeOffset;
};

struct AudioFilePacketTableInfo {
    long long mNumberValidFrames;
    int mPrimingFrames;
    int mRemainderFrames;
};

struct AudioLogger;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct AudioTrackInterface;

struct AuthChallengeInfo {
    long long _field1;
    _Bool _field2;
    struct Origin _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field5;
};

struct AuthCredentials {
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field1;
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field2;
};

struct BaseTimerTaskInternal;

struct Behavior;

struct BindStateBase;

struct BlendState;

struct BlockBasedBehavior;

struct BubbleBehavior;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CC_MD5state_st {
    unsigned int A;
    unsigned int B;
    unsigned int C;
    unsigned int D;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct CC_SHA256state_st {
    unsigned int _field1[2];
    unsigned int _field2[8];
    unsigned int _field3[16];
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPathElement {
    int _field1;
    struct CGPoint *_field2;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CLimiter {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5[256];
    float _field6[256];
    float _field7[512];
    float _field8[512];
    int _field9;
    _Bool _field10;
    int _field11;
    float _field12;
};

struct COMPLEX_s;

struct CYAMPtrsHashMap {
    CDUnknownFunctionPointerType *_field1;
    struct yam_hashmap_entry *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    struct _malloc_zone_t *_field7;
};

struct CYAMStackHashMap {
    CDUnknownFunctionPointerType *_field1;
    struct yam_hashmap_entry *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    struct _malloc_zone_t *_field7;
};

struct CYAMStackHelper {
    struct AppImages _field1;
};

struct Callback<void (), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct Callback<void (int), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct CallbackObject;

struct CalloutImageLayout {
    struct {
        unsigned int x;
        unsigned int y;
    } imageAnchor;
    CDStruct_0a4f9365 contentCollisionBounds;
    CDStruct_0a4f9365 arrowCollisionBounds;
    struct {
        unsigned int width;
        unsigned int height;
    } imageSize;
};

struct CalloutSharedState;

struct CalloutStrategy;

struct Camera {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct GMSx_Location *location_;
    struct Rotation *rotation_;
    struct Size *screen_size_;
    float field_of_view_y_;
};

struct CertVerifier;

struct CherEffect {
    CDUnknownFunctionPointerType *_field1;
};

struct ClickToGoMap;

struct Collidable2D {
    CDUnknownFunctionPointerType *_field1;
};

struct CollidableSet2D;

struct ColorMaskState;

struct ColorMatrix {
    float *m_;
};

struct ColorSpan;

struct ColoredOverlayBehavior;

struct ColoredPoint;

struct ColumnDef {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
};

struct CombFilter {
    float *_field1;
    int _field2;
    int _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct Component {
    int _field1;
    int _field2;
};

struct ConnectTiming {
    struct TimeTicks _field1;
    struct TimeTicks _field2;
    struct TimeTicks _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    struct DnsInfo _field7;
};

struct ConnectionParams;

struct CookieStore;

struct CoreBase;

struct CronetEnvironment {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    _Bool _field5;
    _Bool _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field9;
    int _field10;
    struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> _field11;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field12;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field13;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field14;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field15;
    struct scoped_refptr<base::SequencedTaskRunner> _field16;
    struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> _field17;
    struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> _field18;
    struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> _field19;
    struct scoped_refptr<net::URLRequestContextGetter> _field20;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field21;
    _Bool _field22;
    struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> _field23;
    struct unique_ptr<net::WriteToFileNetLogObserver, std::__1::default_delete<net::WriteToFileNetLogObserver>> _field24;
    _Bool _field25;
    _Bool _field26;
    struct TTNetworkDelegate *_field27;
    struct unique_ptr<net::ProxyConfigService, std::__1::default_delete<net::ProxyConfigService>> _field28;
    struct unique_ptr<base::PowerMonitor, std::__1::default_delete<base::PowerMonitor>> _field29;
    int _field30;
    struct unique_ptr<net::NetworkQualityEstimator, std::__1::default_delete<net::NetworkQualityEstimator>> _field31;
    int _field32;
    struct ScopedVector<cronet::URLRequestContextConfig::Pkp> _field33;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field34;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field35;
    _Bool _field36;
    _Bool _field37;
    struct TTColdStartListener *_field38;
};

struct CxxModule;

struct DASHDataInputProvider {
    CDUnknownFunctionPointerType *_vptr$DataInputProvider;
    _Bool doneAdding_;
    _Bool gotError_;
    NSObject *data_ready_semaphore_;
    NSObject *access_semaphore_;
    NSMutableData *data_;
    char *base_;
    unsigned long long size_;
    unsigned long long offset_;
};

struct DSPSplitComplex {
    float *realp;
    float *imagp;
};

struct DataInputProvider;

struct Database {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct Recyclable<std::__1::shared_ptr<WCDB::HandlePool>> _field3;
};

struct DefaultAlphaShaderState;

struct DefaultShaderState;

struct Delegate;

struct DepthBufferState;

struct DispatchActionInfo;

struct DnsInfo {
    struct AddressList _field1;
};

struct Effect {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, mammon::Parameter *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mammon::Parameter *>>> _field2;
    _Bool _field3;
    _Bool _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
    void *_field6;
    int _field7;
    _Bool _field8;
    struct vector<float, std::__1::allocator<float>> _field9;
    struct vector<float, std::__1::allocator<float>> _field10;
    struct RingBufferHelper _field11;
    _Bool _field12;
};

struct Entity;

struct EntityRenderer {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>>> _field2;
    struct GMSx_Mutex _field3;
    struct vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> _field4;
    struct list<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> _field5;
    struct set<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> _field6;
    struct set<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> _field7;
    struct map<const char *, gmscore::renderer::RenderBin *, std::__1::less<const char *>, std::__1::allocator<std::__1::pair<const char *const, gmscore::renderer::RenderBin *>>> _field8;
    vector_ef47c132 _field9;
    reffed_ptr_c8344b08 _field10[13];
    struct GMSx_Time *_field11;
    _Bool _field12;
    _Bool _field13;
    struct FPSCounter _field14;
    unsigned int _field15;
    reffed_ptr_f31d11c9 _field16;
    struct vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> _field17;
};

struct EntityState;

struct Equalizer {
    int _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    float *_field5;
    int _field6;
    struct _equalizer_config_t *_field7;
    _Bool _field8;
    float *_field9;
    float _field10;
    float **_field11;
    float **_field12;
    float ***_field13;
    float ***_field14;
    _Bool _field15;
};

struct Error {
    int m_code;
    int m_type;
    struct map<WCDB::Error::Key, WCDB::ErrorValue, std::__1::less<WCDB::Error::Key>, std::__1::allocator<std::__1::pair<const WCDB::Error::Key, WCDB::ErrorValue>>> m_infos;
};

struct Exciter {
    float _field1;
    int _field2;
    int _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    int _field11;
    float _field12;
    int _field13;
};

struct ExpansionInfo {
    unsigned short _field1;
    id _field2;
    _Bool _field3;
    id _field4;
};

struct FBAdDeviceBatteryInfo {
    long long _field1;
    double _field2;
};

struct FBAdSize {
    struct CGSize size;
};

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    unsigned int _field5;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
    float rotationAngle;
};

struct FNFMP4TrakAtomForSeek;

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct FPSCounter {
    double _field1;
    double _field2;
    int _field3;
};

struct FeatureData;

struct FeatureID {
    unsigned long long cell_id_;
    unsigned long long fingerprint_;
    unsigned long long hash_;
    _Bool is_valid_;
};

struct FilterNLMS;

struct Flag;

struct Frame {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    unsigned int _field4[1];
    int _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
    int _field9;
    struct RepeatedPtrField<pbbp2::Frame_ExtendedEntry> _field10;
    struct ArenaStringPtr _field11;
    struct ArenaStringPtr _field12;
    struct ArenaStringPtr _field13;
};

struct Frustum2D {
    CDUnknownFunctionPointerType *_field1;
    struct Point2D _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Rectangle2D _field6;
};

struct GADNAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GADOAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GLAlphaOnlyTextureShaderState;

struct GLAlphaShaderState;

struct GLAreaGroup;

struct GLBasicShaderState;

struct GLBuildingFadingAlphaShaderState;

struct GLBuildingFadingShaderState;

struct GLBuildingGroupFadeBehavior;

struct GLColorPair {
    unsigned int first;
    unsigned int second;
};

struct GLLabel;

struct GLLabelGroup {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    struct LabelGroup _field9;
    id _field10;
    struct vector<int, std::__1::allocator<int>> {
        int *_field1;
        int *_field2;
        struct __compressed_pair<int *, std::__1::allocator<int>> {
            int *_field1;
        } _field3;
    } _field11;
    int _field12;
    int _field13;
    float _field14;
    struct LabelTheme *_field15;
    int _field16;
    _Bool _field17;
    _Bool _field18;
    struct Vector2f _field19;
    id _field20;
    struct reffed_ptr<gmscore::vector::IconTextureCache> _field21;
    struct GLLabel *_field22;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field23;
    id _field24;
    id _field25;
};

struct GLState {
    CDUnknownFunctionPointerType *_field1;
    struct GLrectangle _field2;
    struct GLrectangle _field3;
    _Bool _field4;
    unsigned int _field5;
    struct Vector4f _field6;
    _Bool _field7;
    int _field8;
    _Bool _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    unsigned int _field19;
    _Bool _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23[8];
    unsigned int _field24;
    _Bool _field25;
    unsigned int _field26;
    _Bool _field27;
    unsigned int _field28;
    _Bool _field29;
    unsigned int _field30;
    _Bool _field31;
    unsigned int _field32;
    unsigned int _field33;
    _Bool _field34;
    unsigned int _field35;
    int _field36;
    unsigned int _field37;
    _Bool _field38;
    unsigned int _field39;
    _Bool _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    _Bool _field44;
    float _field45;
    float _field46;
    _Bool _field47;
    unsigned int _field48;
    _Bool _field49;
    struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> _field50;
    float _field51;
    _Bool _field52;
    unsigned long long _field53;
    unsigned int _field54;
    unsigned int _field55;
};

struct GLStrokeLayer {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::Entity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Entity>>> _field2;
    struct ZOrdering _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    vector_a3426c4e _field7;
    vector_a3426c4e _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct vector<gmscore::vector::GLStrokeLayer::LineAttributeInfo, std::__1::allocator<gmscore::vector::GLStrokeLayer::LineAttributeInfo>> _field11;
    id _field12;
    struct reffed_ptr<gmscore::vector::StrokeTextureCache> _field13;
    reffed_ptr_7371fe81 _field14;
    reffed_ptr_7371fe81 _field15;
    struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field16;
    struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
    struct reffed_ptr<gmscore::vector::GMSTexturedStrokeShaderState> _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    double _field23;
    reffed_ptr_484c2754 _field24;
    struct reffed_ptr<gmscore::vector::GMSStippleTexture> _field25;
    unsigned long long _field26;
    char *_field27;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>>> _field28;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>>> _field29;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>>> _field30;
    id _field31;
    struct GMSx_Mutex _field32;
};

struct GLTileUpdaterBehavior;

struct GLrectangle {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct GMSContourList {
    vector_e0f2bd7e indices_;
    vector_ac2b163d vertices_;
};

struct GMSCoordinate {
    double latitude;
    double longitude;
};

struct GMSCoordinateRectangle {
    struct GMSCoordinate center;
    struct GMSCoordinate span;
};

struct GMSCopyrightOverlayPadding {
    double _field1;
    double _field2;
    long long _field3;
};

struct GMSEntityTapClassStatusSet {
    _Bool is_whitelist_;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> classes_;
};

struct GMSEntityTapOrdering {
    struct GMSEntityTapPriority tapPriority;
    struct tuple<int, int, unsigned int> zOrder;
    short rank;
};

struct GMSEntityTapPriority {
    unsigned short tapClass;
    unsigned short relativePriority;
};

struct GMSGeneratedTextureAtlas;

struct GMSLazyMultiZoomStyle;

struct GMSMarkupBehavior;

struct GMSRocketIconService {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> _field2;
};

struct GMSStippleTexture;

struct GMSStippleTexturePool;

struct GMSTextureAtlas {
    int _field1;
    int _field2;
    int _field3;
    struct GMSTextureAtlasItem *_field4;
};

struct GMSTextureAtlasItem;

struct GMSTexturedStrokeShaderState;

struct GMSTileTypeInfo {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct GMSx_Location;

struct GMSx_Mutex {
    struct _opaque_pthread_mutex_t mutex_;
    _Bool is_safe_;
    _Bool destroy_;
};

struct GMSx_Time {
    CDUnknownFunctionPointerType *_field1;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    union {
        _Bool _field1;
        int _field2;
        long long _field3;
        unsigned int _field4;
        unsigned long long _field5;
        float _field6;
        double _field7;
        id _field8;
        id _field9;
        id _field10;
        int _field11;
    } _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GULReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GURL {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    _Bool _field2;
    struct Parsed _field3;
    struct unique_ptr<GURL, std::__1::default_delete<GURL>> _field4;
};

struct GlSurfaceHelper;

struct HMDRecordLocalIDRange {
    unsigned long long minLocalID;
    unsigned long long maxLocalID;
};

struct HTSCROPRECT {
    double xPos;
    double yPos;
    double xScale;
    double yScale;
};

struct HTSGPUMatrix3x3 {
    struct HTSGPUVector3 _field1;
    struct HTSGPUVector3 _field2;
    struct HTSGPUVector3 _field3;
};

struct HTSGPUMatrix4x4 {
    struct HTSGPUVector4 one;
    struct HTSGPUVector4 two;
    struct HTSGPUVector4 three;
    struct HTSGPUVector4 four;
};

struct HTSGPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct HTSGPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct HTSGPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct HTSIGListSectionEntry;

struct HandlePool;

struct HandleWrap;

struct HasBits<1> {
    unsigned int has_bits_[1];
};

struct HashValue;

struct HeaderKeyValuePair;

struct Holder;

struct HostPortPair {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    unsigned short _field2;
};

struct HttpProtocolHandlerCore {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct ThreadChecker _field3;
    id _field4;
    struct scoped_refptr<net::IOBuffer> _field5;
    struct scoped_nsobject<NSMutableURLRequest> _field6;
    struct scoped_nsobject<CRWHTTPStreamDelegate> _field7;
    struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> _field8;
    struct URLRequest *_field9;
    struct WeakPtr<net::RequestTracker> _field10;
};

struct HttpRequestHeaders {
    struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> _field1;
};

struct HttpResponseHeaders;

struct HttpResponseInfo {
    _Bool _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ProxyServer _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct HostPortPair _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field13;
    int _field14;
    struct Time _field15;
    struct Time _field16;
    struct TimeTicks _field17;
    struct scoped_refptr<net::AuthChallengeInfo> _field18;
    struct scoped_refptr<net::SSLCertRequestInfo> _field19;
    struct SSLInfo _field20;
    struct scoped_refptr<net::HttpResponseHeaders> _field21;
    struct HttpVaryData _field22;
    struct scoped_refptr<net::IOBufferWithSize> _field23;
};

struct HttpVaryData {
    struct MD5Digest _field1;
    _Bool _field2;
};

struct I420BufferInterface;

struct IESIndensityParam_t {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    float _field31;
    float _field32;
    float _field33;
};

struct IESLiveIndensityParam_t {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
};

struct IESRecorderDescription {
    float musicPitch;
    float musicVolume;
    float recordVolume;
    double startTime;
    double timeOffset;
    double recordStartTime;
};

struct IESSequencerBeatCRepresentation {
    float _field1;
    float _field2;
};

struct IESSoundOutputBufferBlock {
    unsigned long long _field1;
    struct AudioQueueBuffer *_field2;
    struct IESSoundOutputBufferBlock *_field3;
};

struct IESSrtDdata {
    struct IESSrtLine *_field1;
    int _field2;
};

struct IESSrtLine;

struct IGListSectionEntry;

struct ILayerInfo {
    int _field1;
    struct ILayerRect _field2;
    int _field3;
    _Bool _field4;
};

struct ILayerRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct IMixerInterface;

struct IOBuffer;

struct IOBufferWithSize;

struct IOSGLState;

struct IOSPlatformContext {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> _field2;
    struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> _field3;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> _field4;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> _field5;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> _field6;
    id _field7;
};

struct IPAddress {
    vector_a3426c4e _field1;
};

struct IPEndPoint;

struct IVIOSGLContext;

struct IconHandle {
    struct __hash_const_iterator<std::__1::__hash_node<std::__1::unique_ptr<GMSx_gmm_photo::api::IconOptions, std::__1::default_delete<GMSx_gmm_photo::api::IconOptions>>, void *>*> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::unique_ptr<GMSx_gmm_photo::api::IconOptions, std::__1::default_delete<GMSx_gmm_photo::api::IconOptions>>, void *>*> *_field1;
    } _field1;
};

struct IconOptions {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct ArenaStringPtr url_;
    double latitude_;
    double longitude_;
    double altitude_;
    long long resource_id_;
    float opacity_;
    float scale_;
    float anchor_offset_x_;
    float anchor_offset_y_;
};

struct IconRenderer {
    CDUnknownFunctionPointerType *_field1;
};

struct IconTextureCache;

struct ImageData;

struct ImageDataSignature {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct Impl;

struct IndexedTriangleList2D {
    vector_aa37bc82 vertices_;
    vector_e0f2bd7e indices_;
};

struct IndoorID {
    unsigned long long cell_id_;
    unsigned long long fingerprint_;
    unsigned long long hash_;
    _Bool is_valid_;
};

struct IndoorTileAnimationBehavior;

struct Instance;

struct InternalMetadataWithArenaLite {
    void *ptr_;
};

struct JSExecutorFactory;

struct JavaDataInput {
    struct DataInputProvider *_field1;
};

struct JavaDataOutput {
    id _field1;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false> {
    CDUnknownFunctionPointerType *_vptr$LRUCache;
    unsigned long long max_entries_;
    basic_string_a490aa4c cache_name_;
    struct Reservations<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>> reservations_;
    struct unordered_map<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<std::__1::pair<const gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>>> map_;
    struct LRUCacheEntry *oldest_;
    struct LRUCacheEntry *youngest_;
    unsigned int mutations_counter_;
    unsigned int hit_counter_;
    unsigned int miss_counter_;
    unsigned int eject_counter_;
};

struct LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false> {
    CDUnknownFunctionPointerType *_vptr$LRUCache;
    unsigned long long max_entries_;
    basic_string_a490aa4c cache_name_;
    struct Reservations<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>> reservations_;
    struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> map_;
    struct LRUCacheEntry *oldest_;
    struct LRUCacheEntry *youngest_;
    unsigned int mutations_counter_;
    unsigned int hit_counter_;
    unsigned int miss_counter_;
    unsigned int eject_counter_;
};

struct LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false> {
    CDUnknownFunctionPointerType *_vptr$LRUCache;
    unsigned long long max_entries_;
    basic_string_a490aa4c cache_name_;
    struct Reservations<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>> reservations_;
    struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> map_;
    struct LRUCacheEntry *oldest_;
    struct LRUCacheEntry *youngest_;
    unsigned int mutations_counter_;
    unsigned int hit_counter_;
    unsigned int miss_counter_;
    unsigned int eject_counter_;
};

struct LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false> {
    CDUnknownFunctionPointerType *_field1;
    unsigned long long _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field3;
    struct Reservations<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>> _field4;
    struct unordered_map<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>>> _field5;
    struct LRUCacheEntry *_field6;
    struct LRUCacheEntry *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct LRUCacheEntry;

struct LSGPUMatrix3x3 {
    struct LSGPUVector3 _field1;
    struct LSGPUVector3 _field2;
    struct LSGPUVector3 _field3;
};

struct LSGPUMatrix4x4 {
    struct LSGPUVector4 _field1;
    struct LSGPUVector4 _field2;
    struct LSGPUVector4 _field3;
    struct LSGPUVector4 _field4;
};

struct LSGPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
    unsigned int bind;
};

struct LSGPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct LSGPUVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct LSLiveIntensityParam_t {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    float _field31;
    float _field32;
    float _field33;
};

struct LabelBucketRestriction;

struct LabelDedupingRule;

struct LabelElement;

struct LabelGroup {
    struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> label_elements_;
    struct Alignment alignment_;
    basic_string_a490aa4c text_;
};

struct LabelProvider;

struct LabelSnapshot;

struct LabelSource;

struct LabelSourceSet {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> _field2;
    struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _field3;
};

struct LabelTheme;

struct LabelUpdateDelegate;

struct LabelableFeature;

struct LabelableFeatureSelector;

struct LabelingBehavior;

struct LabelingUpdateListener;

struct LayeredFeatureGroup {
    struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> _field1;
    struct map<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<FeatureTypeCode>, std::__1::allocator<std::__1::pair<const FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> _field2;
};

struct LeakTracker<net::URLRequest>;

struct Limiter;

struct LineAttributeInfo;

struct LineState;

struct Listener;

struct LoadTimingInfo {
    _Bool _field1;
    unsigned int _field2;
    struct Time _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    struct ConnectTiming _field7;
    struct TimeTicks _field8;
    struct TimeTicks _field9;
    struct TimeTicks _field10;
    struct TimeTicks _field11;
    struct TimeTicks _field12;
};

struct Location {
    char *_field1;
    char *_field2;
    int _field3;
    void *_field4;
};

struct LoudnessProcess {
    int _field1;
    int _field2;
    int _field3;
    _Bool _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    struct Limiter *_field11;
    struct PeakAnalysis *_field12;
};

struct MD5Digest {
    unsigned char _field1[16];
};

struct MDCActivityIndicatorMotionSpecIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
    struct MDMMotionTiming _field3;
    struct MDMMotionTiming _field4;
};

struct MDCActivityIndicatorMotionSpecProgress {
    struct MDMMotionTiming _field1;
};

struct MDCActivityIndicatorMotionSpecTransitionToDeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDCActivityIndicatorMotionSpecTransitionToIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDMMotionCurve {
    unsigned long long _field1;
    double _field2[4];
};

struct MDMMotionRepetition {
    unsigned long long _field1;
    double _field2;
    _Bool _field3;
};

struct MDMMotionTiming {
    double _field1;
    double _field2;
    struct MDMMotionCurve _field3;
    struct MDMMotionRepetition _field4;
};

struct MarkupRevealOptions {
    double _field1;
    double _field2;
    _Bool _field3;
    int _field4;
};

struct Matrix4f {
    union _GLKMatrix4 matrix_;
};

struct MediaEncodeStreamInterface {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct list<avframework::ObserverInterface *, std::__1::allocator<avframework::ObserverInterface *>> _field4;
};

struct MediaEngineFactoryInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct MediaEngineObserver;

struct Method {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    unsigned long long _field2;
    struct function<void (Json::Value, std::__1::function<void (std::__1::vector<Json::Value, std::__1::allocator<Json::Value>>)>, std::__1::function<void (std::__1::vector<Json::Value, std::__1::allocator<Json::Value>>)>)> _field3;
    struct function<Json::Value (Json::Value)> _field4;
};

struct MiniCodedInputData {
    char *_field1;
    int _field2;
    int _field3;
};

struct MiniCodedOutputData {
    char *_field1;
    unsigned long long _field2;
    int _field3;
};

struct MiniPBEncodeItem;

struct ModelRendererValue<bool>;

struct ModelRendererValue<float>;

struct ModelRendererValue<unsigned int>;

struct ModuleRegistry;

struct MsProcess {
    int _field1;
    int _field2;
    float _field3;
    float _field4;
};

struct MutableState;

struct MutableStateTracker;

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NetLog;

struct NetLogSource {
    int _field1;
    unsigned int _field2;
};

struct NetLogWithSource {
    struct NetLogSource _field1;
    struct NetLog *_field2;
    int _field3;
};

struct NetworkDelegate;

struct NetworkQualityEstimator;

struct NormalVector;

struct OCSPVerifyResult {
    int _field1;
    int _field2;
};

struct ObjcAudioTrackSource;

struct ObjcVideoTrackSource;

struct ObserverInterface;

struct OneShotTimer {
    CDUnknownFunctionPointerType *_field1;
    struct BaseTimerTaskInternal *_field2;
    struct scoped_refptr<base::SingleThreadTaskRunner> _field3;
    struct Location _field4;
    struct TimeDelta _field5;
    struct Callback<void (), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> _field6;
    struct TimeTicks _field7;
    struct TimeTicks _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    struct TickClock *_field12;
    _Bool _field13;
};

struct OpaqueAudioComponentInstance;

struct OpaqueAudioFileID;

struct Optional<url::Origin> {
    struct OptionalStorage<url::Origin, false> _field1;
};

struct OptionalStorage<url::Origin, false> {
    _Bool _field1;
    union {
        char _field1;
        struct Origin _field2;
    } _field2;
};

struct Origin {
    struct SchemeHostPort _field1;
    _Bool _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field3;
};

struct POPAnimatorItem;

struct Parsed {
    struct Component _field1;
    struct Component _field2;
    struct Component _field3;
    struct Component _field4;
    struct Component _field5;
    struct Component _field6;
    struct Component _field7;
    struct Component _field8;
    _Bool _field9;
    struct Parsed *_field10;
};

struct PeakAnalysis;

struct PendingOp;

struct Photo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct RepeatedPtrField<GMSx_gmm_photo::api::NavArrow> nav_arrows_;
    struct RepeatedPtrField<GMSx_gmm_photo::api::RoadLabel> road_labels_;
    struct PhotoId *id_;
    struct GMSx_Location *location_;
    struct Rotation *orientation_;
    struct Size *original_size_;
    struct Size *tile_size_;
    struct Size *equirectangular_size_;
    struct Size *equirectangular_offset_;
    struct PlanarDepthMap *depth_map_;
    struct ClickToGoMap *click_to_go_map_;
};

struct PhotoHandle {
    struct PhotoId photo_id_;
};

struct PhotoId {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct ArenaStringPtr id_;
    int frontend_;
};

struct PhotoTransition {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct PhotoId *animation_final_photo_;
    struct Camera *camera_;
    float throw_duration_;
};

struct PitchTempoAdjuster;

struct Pkp;

struct PlanarDepthMap;

struct Point2D {
    int x_;
    int y_;
};

struct Point3D {
    int _field1;
    int _field2;
    int _field3;
};

struct PointsBehavior;

struct PolylineSpan2D {
    struct __wrap_iter<const gmscore::model::Point2D *> _field1;
    struct __wrap_iter<const gmscore::model::Point2D *> _field2;
    struct __wrap_iter<const gmscore::model::Point2D *> _field3;
    float _field4;
    struct Rectangle2D _field5;
};

struct PowerMonitor;

struct ProxyConfigService;

struct ProxyServer {
    int _field1;
    struct HostPortPair _field2;
};

struct PushManager;

struct PushObserver;

struct RCTLayoutContext {
    struct CGPoint _field1;
    id _field2;
    id _field3;
};

struct RCTLayoutMetrics {
    struct CGRect frame;
    struct CGRect contentFrame;
    struct UIEdgeInsets borderWidth;
    long long displayType;
    long long layoutDirection;
};

struct RCTMessageThread;

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RNGHHitSlop {
    double top;
    double left;
    double bottom;
    double right;
    double width;
    double height;
};

struct RTMPTransportInterface;

struct RealtimeInfo {
    double _field1;
    double _field2;
    double _field3;
    int _field4;
    int _field5;
    int _field6;
    double _field7;
    double _field8;
    int _field9;
    int _field10;
    double _field11;
    int _field12;
    double _field13;
};

struct Rectangle2D {
    CDUnknownFunctionPointerType *_vptr$Collidable2D;
    struct Point2D low_;
    struct Point2D high_;
};

struct Recyclable<std::__1::shared_ptr<WCDB::HandlePool>> {
    struct shared_ptr<WCDB::HandlePool> _field1;
    struct atomic<int> *_field2;
    struct function<void (std::__1::shared_ptr<WCDB::HandlePool>&)> _field3;
};

struct Recyclable<std::__1::shared_ptr<WCDB::HandleWrap>> {
    struct shared_ptr<WCDB::HandleWrap> m_value;
    struct atomic<int> *m_reference;
    struct function<void (std::__1::shared_ptr<WCDB::HandleWrap>&)> m_onRecycled;
};

struct RecyclableHandle {
    struct shared_ptr<WCDB::HandleWrap> m_value;
    struct Recyclable<std::__1::shared_ptr<WCDB::HandleWrap>> m_recyclable;
};

struct RecyclableStatement {
    struct RecyclableHandle m_handle;
    struct shared_ptr<WCDB::StatementHandle> m_statementHandle;
};

struct RedirectInfo {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field2;
    struct GURL _field3;
    struct GURL _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field5;
    int _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field7;
};

struct Region2D {
    CDUnknownFunctionPointerType *_field1;
};

struct RenderBin;

struct RenderOptions {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    float photo_b_opacity_;
    _Bool photo_a_hi_res_fetch_disabled_;
    float road_label_opacity_;
    float ui_swipe_rail_opacity_;
    float ui_swipe_rail_width_meters_;
    float ui_nav_arrow_opacity_;
    float display_density_;
    float photo_a_opacity_;
    _Bool photo_b_hi_res_fetch_disabled_;
};

struct RenderTarget;

struct Renderer {
    CDUnknownFunctionPointerType *_field1;
};

struct Rep;

struct RepeatedPtrField<GMSx_gmm_photo::api::NavArrow> {
    struct Arena *arena_;
    int current_size_;
    int total_size_;
    struct Rep *rep_;
};

struct RepeatedPtrField<GMSx_gmm_photo::api::RoadLabel> {
    struct Arena *arena_;
    int current_size_;
    int total_size_;
    struct Rep *rep_;
};

struct RepeatedPtrField<pbbp2::Frame_ExtendedEntry> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RequestTracker;

struct Reservations<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>> {
    struct unordered_map<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>>> map_;
};

struct Reservations<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>> {
    struct unordered_map<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>>> map_;
};

struct Reservations<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>> {
    struct unordered_map<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field1;
};

struct ReslHeaderInfo {
    char *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    int _field5;
};

struct ResourceFinder {
    CDUnknownFunctionPointerType *_field1;
};

struct Reverb {
    struct reverb_params _field1;
    int _field2;
    int _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    _Bool _field13;
    _Bool _field14;
    struct CombFilter _field15[8];
    struct CombFilter _field16[8];
    struct AllPassFilter _field17[4];
    struct AllPassFilter _field18[4];
    float _field19[1214];
    float _field20[1239];
    float _field21[1293];
    float _field22[1318];
    float _field23[1389];
    float _field24[1414];
    float _field25[1475];
    float _field26[1500];
    float _field27[1547];
    float _field28[1572];
    float _field29[1622];
    float _field30[1647];
    float _field31[1694];
    float _field32[1719];
    float _field33[1760];
    float _field34[1785];
    float _field35[605];
    float _field36[630];
    float _field37[480];
    float _field38[505];
    float _field39[371];
    float _field40[396];
    float _field41[244];
    float _field42[269];
};

struct RingBufferHelper {
    struct vector<mammon::RingBufferX<float>, std::__1::allocator<mammon::RingBufferX<float>>> _field1;
    struct vector<mammon::RingBufferX<float>, std::__1::allocator<mammon::RingBufferX<float>>> _field2;
};

struct RingBufferX<float>;

struct Rotation {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArenaLite _field2;
    struct HasBits<1> _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
};

struct RtmpOBServer;

struct SGM_LocationCoordinate2D {
    double _field1;
    double _field2;
};

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SSLCertRequestInfo;

struct SSLInfo {
    struct scoped_refptr<net::X509Certificate> _field1;
    struct scoped_refptr<net::X509Certificate> _field2;
    unsigned int _field3;
    int _field4;
    unsigned short _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    int _field13;
    struct vector<net::HashValue, std::__1::allocator<net::HashValue>> _field14;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field15;
    struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> _field16;
    _Bool _field17;
    int _field18;
    int _field19;
    struct OCSPVerifyResult _field20;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct STLRange<const std::__1::set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>> {
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field1;
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>>> {
    struct __wrap_iter<const gmscore::model::Stroke *> _field1;
    struct __wrap_iter<const gmscore::model::Stroke *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
};

struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
};

struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
};

struct SchedulingService;

struct SchemeHostPort {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field2;
    unsigned short _field3;
};

struct ScopedVector<cronet::URLRequestContextConfig::Pkp> {
    struct vector<cronet::URLRequestContextConfig::Pkp *, std::__1::allocator<cronet::URLRequestContextConfig::Pkp *>> _field1;
};

struct SequenceChecker;

struct SequencedTaskRunner;

struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>;

struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>;

struct ServicesConfig {
    basic_string_a490aa4c product_id;
    basic_string_a490aa4c language;
    basic_string_a490aa4c country;
    basic_string_a490aa4c geo_photo_metadata_url;
    basic_string_a490aa4c geo_photo_single_image_url;
    basic_string_a490aa4c geo_photo_local_tiled_single_image_url;
    basic_string_a490aa4c geo_photo_area_connectivity_url;
    basic_string_a490aa4c alleycat_url;
    basic_string_a490aa4c fife_url;
    struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> tile_templates;
};

struct SignedCertificateTimestampAndStatus;

struct SingScoring {
    CDUnknownFunctionPointerType *_field1;
};

struct SingleThreadTaskRunner;

struct Size;

struct SocketTimeoutParam {
    struct TimeDelta _field1;
    struct TimeDelta _field2;
    struct TimeDelta _field3;
};

struct SpotlightParams {
    _Bool tactile_styler_enabled;
    _Bool spotlight_labels_visible;
    _Bool secondary_clickability_enabled;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct Statement {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field2;
};

struct StatementDelete {
    CDUnknownFunctionPointerType *_vptr$Statement;
    basic_string_90719d97 m_description;
};

struct StatementHandle;

struct StatementInsert {
    CDUnknownFunctionPointerType *_vptr$Statement;
    basic_string_90719d97 m_description;
};

struct StatementSelect {
    CDUnknownFunctionPointerType *_vptr$Statement;
    basic_string_90719d97 m_description;
};

struct StatementUpdate {
    CDUnknownFunctionPointerType *_vptr$Statement;
    basic_string_90719d97 m_description;
    _Bool m_set;
};

struct StencilState;

struct StickerBehavior;

struct StringTableEntry;

struct Stroke {
    unsigned int color_;
    unsigned short width_eighths_;
    struct vector<short, std::__1::allocator<short>> dashes_;
    float width_;
    int orthogonal_offset_eighths_;
    basic_string_a490aa4c texture_url_;
    basic_string_a490aa4c start_cap_url_;
    basic_string_a490aa4c end_cap_url_;
    float animation_duration_;
};

struct StrokeTextureCache;

struct StyleID {
    long long styleID;
    unsigned long long type;
};

struct TEBundle {
    struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> m_mapBundle;
};

struct TTColdStartListener;

struct TTFetcherDelegate;

struct TTNetworkDelegate;

struct TappableMapItemQueue {
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> items_;
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> inactive_items_;
    struct GMSEntityTapClassStatusSet active_tap_classes_;
};

struct TextBoxStyle {
    unsigned int fill_color_;
    struct Stroke stroke_;
    GMSModelStyleIcon *box_icon_;
};

struct TextStyle {
    unsigned int color_;
    unsigned int outline_color_;
    float outline_width_;
    unsigned char size_;
    float leading_ratio_;
    float tracking_ratio_;
    int attributes_;
};

struct TextureAtlasesContext;

struct TextureCache {
    struct GMSx_Mutex _field1;
    struct LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false> _field2;
};

struct TextureShaderState;

struct TextureState;

struct Thread;

struct ThreadChecker;

struct TickClock;

struct Ticker;

struct TileLabelProvider;

struct TileTemplate;

struct Time {
    long long us_;
};

struct TimeDelta {
    long long _field1;
};

struct TimeStretcher {
    CDUnknownFunctionPointerType *_field1;
    struct Impl *_field2;
    int _field3;
    int _field4;
    double _field5;
    _Bool _field6;
    int _field7;
};

struct TimeTicks {
    long long _field1;
};

struct Transaction {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct Recyclable<std::__1::shared_ptr<WCDB::HandlePool>> _field3;
    struct RecyclableHandle _field4;
    _Bool _field5;
    struct shared_ptr<std::__1::mutex> _field6;
};

struct Transform;

struct Triangle2D;

struct TriangleList2D {
    struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> triangles_;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct UIView {
    Class _field1;
};

struct URLFetcher {
    CDUnknownFunctionPointerType *_field1;
};

struct URLRequest {
    CDUnknownFunctionPointerType *_field1;
    struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> _field2;
    struct SequenceChecker _field3;
    struct URLRequestContext *_field4;
    struct NetworkDelegate *_field5;
    struct NetLogWithSource _field6;
    struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> _field7;
    struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> _field8;
    struct vector<GURL, std::__1::allocator<GURL>> _field9;
    struct GURL _field10;
    struct Optional<url::Origin> _field11;
    struct GURL _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field13;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field14;
    int _field15;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field16;
    int _field17;
    struct HttpRequestHeaders _field18;
    int _field19;
    struct Delegate *_field20;
    struct URLRequestStatus _field21;
    struct HttpResponseInfo _field22;
    _Bool _field23;
    _Bool _field24;
    int _field25;
    struct UploadProgress _field26;
    int _field27;
    unsigned long long _field28;
    _Bool _field29;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field30;
    _Bool _field31;
    struct LeakTracker<net::URLRequest> _field32;
    struct Callback<void (int), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    struct AuthCredentials _field37;
    struct scoped_refptr<net::AuthChallengeInfo> _field38;
    long long _field39;
    struct TimeTicks _field40;
    struct LoadTimingInfo _field41;
    struct ProxyServer _field42;
    int _field43;
    struct vector<net::RedirectInfo, std::__1::allocator<net::RedirectInfo>> _field44;
    _Bool _field45;
    _Bool _field46;
    struct TimeTicks _field47;
    struct TimeTicks _field48;
    unsigned int _field49;
    struct vector<net::DispatchActionInfo, std::__1::allocator<net::DispatchActionInfo>> _field50;
    struct TimeDelta _field51;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field52;
    struct SocketTimeoutParam _field53;
    struct OneShotTimer _field54;
    struct TimeDelta _field55;
};

struct URLRequestContext;

struct URLRequestContextGetter;

struct URLRequestJob;

struct URLRequestStatus {
    int _field1;
    int _field2;
};

struct UpdateMyLocationBehavior;

struct UploadDataStream;

struct UploadProgress {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct Vector2f {
    union _GLKVector2 vector_;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct Vector4f {
    union _GLKVector4 _field1;
};

struct Vector<3, double> {
    double elem_[3];
};

struct VertexData;

struct VideoEncoderFactoryInterface;

struct VideoFrame {
    struct scoped_refptr<avframework::VideoFrameBuffer> _field1;
    unsigned int _field2;
    long long _field3;
    long long _field4;
    int _field5;
};

struct VideoFrameBuffer;

struct VideoSinkInterface<avframework::VideoFrame>;

struct VideoTrackInterface;

struct ViewRenderTargetChangedSizeListener;

struct WCTAnyProperty {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    Class _field2;
};

struct WCTBinding {
    Class _field1;
    struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> _field2;
    struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding>>> _field3;
    struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>> _field4;
    struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>> _field5;
    struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>> _field6;
    struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>> _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field8;
};

struct WCTColumnBinding;

struct WCTExpr {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    Class _field2;
    shared_ptr_5c23a9a8 _field3;
    Class _field4;
};

struct WCTExprList {
    struct __list_node_base<const WCTExpr, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTExpr, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct WCTProperty {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    Class _field2;
    shared_ptr_5c23a9a8 _field3;
};

struct WCTPropertyList {
    struct __list_node_base<const WCTProperty, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTProperty, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct WCTResult {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
            struct __rep {
                CDUnion_de1179c4 _field1;
            } _field1;
        } _field1;
    } _field1;
    Class _field2;
    shared_ptr_5c23a9a8 _field3;
};

struct WCTResultList {
    struct __list_node_base<const WCTResult, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCTResult, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
    _Bool m_distinct;
};

struct WFSegmentEndpoints {
    struct Point2D _field1;
    struct Point2D _field2;
};

struct WaveformVisualizer {
    unsigned long long _field1;
    unsigned char _field2;
};

struct WaveformVisualizerRT {
    struct vector<float, std::__1::allocator<float>> _field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    float _field5;
    unsigned long long _field6;
    float _field7;
    float _field8;
};

struct WeakContainer;

struct WeakPtr<net::RequestTracker> {
    struct WeakReference _field1;
    struct RequestTracker *_field2;
};

struct WeakReference {
    struct scoped_refptr<const base::internal::WeakReference::Flag> _field1;
};

struct WrappedFrustum2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Point2D _field6;
    struct Frustum2D _field7;
    struct WFSegmentEndpoints _field8[6];
};

struct WrappedRectangle2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Rectangle2D _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct WriteToFileNetLogObserver;

struct X509Certificate;

struct YGValue {
    float value;
    int unit;
};

struct ZOrdering {
    struct tuple<int, int, int, unsigned int, unsigned int> _field1;
};

struct _00066 {
    struct _00651 {
        struct _00651 {
            struct _00219 _field1;
            struct _00219 _field2;
        } _field1;
        int _field2;
        int _field3;
        float _field4;
    } _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    struct _00445 {
        struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> _field1;
    } _field7;
    struct _00206 {
        struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> _field1;
    } _field8;
    struct _00599 _field9;
    struct _00084 {
        struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
        _Bool _field2;
    } _field10;
    struct _00460 _field11;
    int _field12;
    struct _00111 {
        struct _00184 _field1;
        struct _00599 _field2;
    } _field13;
};

struct _00184 {
    int _field1;
    struct _00210 {
        _Bool _field1;
        struct _00367 _field2;
        struct _00367 _field3;
        struct _00599 _field4;
    } _field2;
};

struct _00219 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct _00348 {
    int _field1;
    float _field2;
    float _field3;
};

struct _00367 {
    _Bool _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct _00460 {
    unsigned long long _field1;
    struct _00650 _field2;
    float _field3;
};

struct _00599 {
    struct _00611 {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
    } _field1;
    struct _00650 _field2;
    struct _00687 {
        float _field1;
        float _field2;
    } _field3;
    struct _00348 _field4[7];
    struct _00348 _field5[7];
    unsigned long long _field6;
    struct _00671 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field7;
    struct _00614 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    struct _00621 {
        float _field1;
        float _field2;
        float _field3;
    } _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct _00650 {
    float _field1;
    float _field2;
};

struct _00716;

struct _ACCAudioRange {
    double _field1;
    double _field2;
};

struct _DetectorConfig {
    double timeout;
    int maxTaskQueueSize;
    int minFaceSize;
    float maxYawAngle;
    float maxPitchAngle;
    float minBrightness;
    float maxBrightness;
    float maxMotionBlurness;
    float maxGaussianBlurness;
    float maxEyeOpen;
    float maxMouthOpen;
    float minIntegrity;
};

struct _FileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _GAIAData {
    unsigned long long _field1;
    _Bool _field2;
    char *_field3;
    void *_field4;
};

struct _HTSAudioRange {
    double location;
    double length;
};

struct _IESCGFloatRange {
    double location;
    double length;
};

struct _IESFileMD5HashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __audio_level_monitor_t {
    _Bool monitoringEnabled;
    double meanAccumulator;
    double chanMeanAccumulator[16];
    int meanBlockCount;
    int chanMeanBlockCount;
    float chanPeak[16];
    float chanAverage[16];
    float peak;
    float average;
    void *floatConverter;
    struct AudioBufferList *scratchBuffer;
    int channels;
    _Bool reset;
};

struct __callback_table_t {
    int count;
    struct __callback_t {
        void *callback;
        void *userInfo;
        unsigned char flags;
    } callbacks[15];
};

struct __channel_t {
    int _field1;
    void *_field2;
    void *_field3;
    struct _channel_group_t *_field4;
    _Bool _field5;
    float _field6;
    float _field7;
    _Bool _field8;
    struct AudioStreamBasicDescription _field9;
    struct __callback_table_t _field10;
    struct AudioTimeStamp _field11;
    _Bool _field12;
    void *_field13;
    void *_field14;
    void *_field15;
    struct AudioBufferList *_field16;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> *_field1;
};

struct __list_node_base<avframework::ObserverInterface *, void *> {
    struct __list_node_base<avframework::ObserverInterface *, void *> *_field1;
    struct __list_node_base<avframework::ObserverInterface *, void *> *_field2;
};

struct __list_node_base<const WCDB::ColumnDef, void *> {
    struct __list_node_base<const WCDB::ColumnDef, void *> *_field1;
    struct __list_node_base<const WCDB::ColumnDef, void *> *_field2;
};

struct __list_node_base<const WCDB::ColumnIndex, void *> {
    struct __list_node_base<const WCDB::ColumnIndex, void *> *_field1;
    struct __list_node_base<const WCDB::ColumnIndex, void *> *_field2;
};

struct __list_node_base<const WCDB::TableConstraint, void *> {
    struct __list_node_base<const WCDB::TableConstraint, void *> *_field1;
    struct __list_node_base<const WCDB::TableConstraint, void *> *_field2;
};

struct __list_node_base<const WCTExpr, void *> {
    struct __list_node_base<const WCTExpr, void *> *_field1;
    struct __list_node_base<const WCTExpr, void *> *_field2;
};

struct __list_node_base<const WCTProperty, void *> {
    struct __list_node_base<const WCTProperty, void *> *__prev_;
    struct __list_node_base<const WCTProperty, void *> *__next_;
};

struct __list_node_base<const WCTResult, void *> {
    struct __list_node_base<const WCTResult, void *> *__prev_;
    struct __list_node_base<const WCTResult, void *> *__next_;
};

struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> {
    struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> *_field1;
    struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> *_field2;
};

struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__prev_;
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__next_;
};

struct __list_node_base<net::HostPortPair, void *> {
    struct __list_node_base<net::HostPortPair, void *> *_field1;
    struct __list_node_base<net::HostPortPair, void *> *_field2;
};

struct __list_node_base<std::__1::basic_string<char>, void *> {
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field1;
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> {
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *_field1;
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> *_field2;
};

struct __raw {
    unsigned long long __words[3];
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __wrap_iter<const gmscore::model::AbsolutePosition *> {
    struct AbsolutePosition *_field1;
};

struct __wrap_iter<const gmscore::model::Alignment *> {
    struct Alignment *_field1;
};

struct __wrap_iter<const gmscore::model::LabelGroup *> {
    struct LabelGroup *_field1;
};

struct __wrap_iter<const gmscore::model::Point2D *> {
    struct Point2D *_field1;
};

struct __wrap_iter<const gmscore::model::Point3D *> {
    struct Point3D *_field1;
};

struct __wrap_iter<const gmscore::model::Stroke *> {
    struct Stroke *_field1;
};

struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> {
    struct NormalVector *_field1;
};

struct __wrap_iter<const gmscore::vector::ColoredPoint *> {
    struct ColoredPoint *_field1;
};

struct __wrap_iter<const int *> {
    int *_field1;
};

struct __wrap_iter<const unsigned int *> {
    unsigned int *_field1;
};

struct _channel_group_t {
    struct __channel_t *_field1;
    int _field2;
    struct OpaqueAudioComponentInstance *_field3;
    struct __channel_t *_field4[100];
    int _field5;
    int _field6;
    struct OpaqueAudioComponentInstance *_field7;
    struct __audio_level_monitor_t _field8;
};

struct _malloc_zone_t;

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
    long long __sig;
    char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _schedule_t {
    void *block;
    void *responseBlock;
    unsigned long long time;
    int context;
    void *identifier;
};

struct _void {
    int _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    long long _field18;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlKind {
    void *_field1;
    int _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlStd {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlStd *_field7;
    struct _xmlStd *_field8;
    struct _xmlDoc *_field9;
};

struct aes_key_st {
    unsigned int _field1[60];
    int _field2;
};

struct array<gmscore::base::reffed_ptr<gmscore::renderer::StencilState>, 8> {
    reffed_ptr_b6b7b6c6 __elems_[8];
};

struct atomic<int>;

struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> {
    struct __compressed_pair<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>>::__rep, std::__1::allocator<unsigned short>> {
        struct __rep {
            union {
                struct __long {
                    unsigned short *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    unsigned short _field1[11];
                    struct {
                        unsigned char _field1[1];
                        unsigned char _field2;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bef_bingo_VideoMontage_BeatsParams {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    float *_field5;
    float *_field6;
    float *_field7;
    float *_field8;
    int *_field9;
};

struct bef_bingo_VideoMontage_Output {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    char *_field6;
    int _field7;
    int _field8;
};

struct bef_bingo_beats_file_parse_result {
    float *_field1;
    unsigned long long _field2;
    float *_field3;
    unsigned long long _field4;
    int *_field5;
    unsigned long long _field6;
};

struct bef_face_106_st {
    struct bef_rect_t _field1;
    float _field2;
    struct bef_fpoint_t _field3[106];
    float _field4[106];
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct bef_face_ext_info_t {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct bef_fpoint_t _field5[22];
    struct bef_fpoint_t _field6[22];
    struct bef_fpoint_t _field7[13];
    struct bef_fpoint_t _field8[13];
    struct bef_fpoint_t _field9[64];
    struct bef_fpoint_t _field10[20];
    struct bef_fpoint_t _field11[20];
};

struct bef_face_filter_policy_st {
    struct bef_face_filter_range_st _field1;
    struct bef_face_filter_range_st _field2;
    struct bef_face_filter_range_st _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct bef_face_filter_range_st {
    float _field1;
    float _field2;
};

struct bef_face_info_st {
    struct bef_face_106_st _field1[10];
    struct bef_face_ext_info_t _field2[10];
    int _field3;
};

struct bef_fpoint_t {
    float _field1;
    float _field2;
};

struct bef_mv_info_st {
    struct bef_mv_template_resource_descriptor_st *_field1;
    int _field2;
    struct bef_mv_resolution_st _field3;
    int _field4;
    struct bef_mv_resource_audio_effect_base_info_st _field5;
};

struct bef_mv_resolution_st {
    int _field1;
    int _field2;
};

struct bef_mv_resource_audio_effect_base_info_st {
    int _field1;
    char *_field2;
    float _field3;
    float _field4;
};

struct bef_mv_template_resource_descriptor_st;

struct bef_rect_t {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct composer_mode_type_t {
    int _field1;
    int _field2;
};

struct condition_variable {
    struct _opaque_pthread_cond_t _field1;
};

struct data_segment {
    void *_field1;
    unsigned long long _field2;
    struct data_segment *_field3;
};

struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> {
    struct __split_buffer<GMSEntityTapClassStatusSet *, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
        struct GMSEntityTapClassStatusSet **__first_;
        struct GMSEntityTapClassStatusSet **__begin_;
        struct GMSEntityTapClassStatusSet **__end_;
        struct __compressed_pair<GMSEntityTapClassStatusSet **, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
            struct GMSEntityTapClassStatusSet **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<GMSEntityTapClassStatusSet>> {
        unsigned long long __first_;
    } __size_;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct eproc {
    struct proc *_field1;
    struct session *_field2;
    struct _pcred {
        char _field1[72];
        struct ucred *_field2;
        unsigned int _field3;
        unsigned int _field4;
        unsigned int _field5;
        unsigned int _field6;
        int _field7;
    } _field3;
    struct _ucred {
        int _field1;
        unsigned int _field2;
        short _field3;
        unsigned int _field4[16];
    } _field4;
    struct vmspace _field5;
    int _field6;
    int _field7;
    short _field8;
    int _field9;
    int _field10;
    struct session *_field11;
    char _field12[8];
    int _field13;
    short _field14;
    short _field15;
    short _field16;
    int _field17;
    char _field18[12];
    int _field19[4];
};

struct extern_proc {
    union {
        struct {
            struct proc *_field1;
            struct proc *_field2;
        } _field1;
        struct timeval _field2;
    } _field1;
    struct vmspace *_field2;
    struct sigacts *_field3;
    int _field4;
    char _field5;
    int _field6;
    int _field7;
    int _field8;
    char *_field9;
    void *_field10;
    int _field11;
    int _field12;
    unsigned int _field13;
    int _field14;
    unsigned int _field15;
    void *_field16;
    char *_field17;
    unsigned int _field18;
    unsigned int _field19;
    struct itimerval _field20;
    struct timeval _field21;
    unsigned long long _field22;
    unsigned long long _field23;
    unsigned long long _field24;
    int _field25;
    struct vnode *_field26;
    int _field27;
    struct vnode *_field28;
    int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned char _field33;
    unsigned char _field34;
    char _field35;
    char _field36[17];
    struct pgrp *_field37;
    struct user *_field38;
    unsigned short _field39;
    unsigned short _field40;
    struct rusage *_field41;
};

struct function<Json::Value (Json::Value)> {
    struct type _field1;
    struct __base<Json::Value (Json::Value)> *_field2;
};

struct function<bool (std::__1::shared_ptr<WCDB::Handle>&, WCDB::Error &)> {
    struct type _field1;
    struct __base<bool (std::__1::shared_ptr<WCDB::Handle>&, WCDB::Error &)> *_field2;
};

struct function<void (Json::Value, std::__1::function<void (std::__1::vector<Json::Value, std::__1::allocator<Json::Value>>)>, std::__1::function<void (std::__1::vector<Json::Value, std::__1::allocator<Json::Value>>)>)> {
    struct type _field1;
    struct __base<void (Json::Value, std::__1::function<void (std::__1::vector<Json::Value, std::__1::allocator<Json::Value>>)>, std::__1::function<void (std::__1::vector<Json::Value, std::__1::allocator<Json::Value>>)>)> *_field2;
};

struct function<void (_xmlNode *)> {
    struct type _field1;
    struct __base<void (_xmlNode *)> *_field2;
};

struct function<void (std::__1::shared_ptr<WCDB::HandlePool>&)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<WCDB::HandlePool>&)> *_field2;
};

struct function<void (std::__1::shared_ptr<WCDB::HandleWrap>&)> {
    struct type __buf_;
    struct __base<void (std::__1::shared_ptr<WCDB::HandleWrap>&)> *__f_;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct hmd_app_cpu_usage {
    long long _field1;
    long long _field2;
    float _field3;
};

struct hmd_async_byteorder;

struct hmd_async_macho {
    unsigned long long _field1;
    long long _field2;
    char *_field3;
    char _field4[40];
    struct mach_header _field5;
    unsigned long long _field6;
    unsigned int _field7;
    struct hmd_async_mem_range _field8;
    struct hmd_async_mem_range _field9;
    struct hmd_async_mem_range _field10;
    struct hmd_async_mem_range _field11;
    _Bool _field12;
    struct hmd_async_byteorder *_field13;
};

struct hmd_async_mem_range {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct itimerval {
    struct timeval _field1;
    struct timeval _field2;
};

struct kinfo_proc {
    struct extern_proc _field1;
    struct eproc _field2;
};

struct list<avframework::ObserverInterface *, std::__1::allocator<avframework::ObserverInterface *>> {
    struct __list_node_base<avframework::ObserverInterface *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<avframework::ObserverInterface *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<const WCDB::ColumnDef, std::__1::allocator<const WCDB::ColumnDef>> {
    struct __list_node_base<const WCDB::ColumnDef, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::ColumnDef, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<const WCDB::ColumnIndex, std::__1::allocator<const WCDB::ColumnIndex>> {
    struct __list_node_base<const WCDB::ColumnIndex, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::ColumnIndex, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<const WCDB::TableConstraint, std::__1::allocator<const WCDB::TableConstraint>> {
    struct __list_node_base<const WCDB::TableConstraint, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::TableConstraint, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
    struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<gmscore::renderer::ImageDataSignature, std::__1::allocator<gmscore::renderer::ImageDataSignature>> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::renderer::ImageDataSignature, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> {
    struct __list_node_base<net::HostPortPair, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<net::HostPortPair, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __list_node_base<std::__1::basic_string<char>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::basic_string<char>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<std::__1::shared_ptr<WCTColumnBinding>, std::__1::allocator<std::__1::shared_ptr<WCTColumnBinding>>> {
    struct __list_node_base<std::__1::shared_ptr<WCTColumnBinding>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<WCTColumnBinding>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>;

struct mach_header {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct mallocInfo {
    unsigned long long _field1;
    unsigned int _field2;
    char *_field3;
    unsigned long long _field4;
};

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<FeatureTypeCode>, std::__1::allocator<std::__1::pair<const FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
    struct __tree<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::__map_value_compare<FeatureTypeCode, std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<FeatureTypeCode>, true>, std::__1::allocator<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FeatureTypeCode, std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<FeatureTypeCode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, std::__1::allocator<std::__1::pair<const GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>, std::__1::allocator<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSGLTileProvider *, unsigned int, std::__1::less<GMSGLTileProvider *>, std::__1::allocator<std::__1::pair<GMSGLTileProvider *const, unsigned int>>> {
    struct __tree<std::__1::__value_type<GMSGLTileProvider *, unsigned int>, std::__1::__map_value_compare<GMSGLTileProvider *, std::__1::__value_type<GMSGLTileProvider *, unsigned int>, std::__1::less<GMSGLTileProvider *>, true>, std::__1::allocator<std::__1::__value_type<GMSGLTileProvider *, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSGLTileProvider *, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSGLTileProvider *, std::__1::__value_type<GMSGLTileProvider *, unsigned int>, std::__1::less<GMSGLTileProvider *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, GMSMarkerRenderInfo *, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, GMSMarkerRenderInfo *>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, long long, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, long long>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, long long>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSOverlay *, GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<std::__1::pair<GMSOverlay *const, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>, std::__1::allocator<std::__1::__value_type<GMSOverlay *, GMSOverlay *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSStyleType, NSMutableArray<GMSModelStyle *>*, std::__1::less<GMSStyleType>, std::__1::allocator<std::__1::pair<const GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
    struct __tree<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>, std::__1::allocator<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSTileLayer *, GMSGLTileProvider *, std::__1::less<GMSTileLayer *>, std::__1::allocator<std::__1::pair<GMSTileLayer *const, GMSGLTileProvider *>>> {
    struct __tree<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, std::__1::less<GMSTileLayer *>, true>, std::__1::allocator<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, std::__1::less<GMSTileLayer *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<UIView *, GMSOffscreenEntityView *, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, GMSOffscreenEntityView *>>> {
    struct __tree<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>, std::__1::allocator<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<WCDB::Error::Key, WCDB::ErrorValue, std::__1::less<WCDB::Error::Key>, std::__1::allocator<std::__1::pair<const WCDB::Error::Key, WCDB::ErrorValue>>> {
    struct __tree<std::__1::__value_type<WCDB::Error::Key, WCDB::ErrorValue>, std::__1::__map_value_compare<WCDB::Error::Key, std::__1::__value_type<WCDB::Error::Key, WCDB::ErrorValue>, std::__1::less<WCDB::Error::Key>, true>, std::__1::allocator<std::__1::__value_type<WCDB::Error::Key, WCDB::ErrorValue>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<WCDB::Error::Key, WCDB::ErrorValue>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<WCDB::Error::Key, std::__1::__value_type<WCDB::Error::Key, WCDB::ErrorValue>, std::__1::less<WCDB::Error::Key>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<const char *, gmscore::renderer::RenderBin *, std::__1::less<const char *>, std::__1::allocator<std::__1::pair<const char *const, gmscore::renderer::RenderBin *>>> {
    struct __tree<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::__map_value_compare<const char *, std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::less<const char *>, true>, std::__1::allocator<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const char *, std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::less<const char *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
    struct __tree<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>, std::__1::allocator<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>, std::__1::less<gmscore::renderer::ImageDataSignature>, std::__1::allocator<std::__1::pair<const gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
    struct __tree<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>, std::__1::allocator<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMarker *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMarker *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMarker *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMarker *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMarker *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, int, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, int>>> {
    struct __tree<std::__1::__value_type<long long, int>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, int>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, int>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, mammon::Parameter *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mammon::Parameter *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, mammon::Parameter *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mammon::Parameter *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mammon::Parameter *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mammon::Parameter *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mammon::Parameter *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>, WCDB::CaseInsensiveComparetor, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, WCDB::CaseInsensiveComparetor, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<WCTColumnBinding>>, WCDB::CaseInsensiveComparetor, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, void *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, void *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int, bool>>, std::__1::allocator<std::__1::pair<const std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>>> {
    struct __tree<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int, bool>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int, bool>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int, bool>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int, bool>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, (anonymous namespace)::PooledTextureState, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, (anonymous namespace)::PooledTextureState>>> {
    struct __tree<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>>> {
    struct __tree<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, id<GMSTileService>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<GMSTileService>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<GMSTileService>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<GMSTileService>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, int, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __tree<std::__1::__value_type<unsigned long long, int>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, GMSOverlay *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, GMSOverlay *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
    struct __tree<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct node {
    struct _xmlNode *_field1;
    struct function<void (_xmlNode *)> _field2;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct pgrp;

struct proc;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct reffed_ptr<(anonymous namespace)::BubbleBehavior> {
    struct BubbleBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::ColoredOverlayBehavior> {
    struct ColoredOverlayBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::GLTileUpdaterBehavior> {
    struct GLTileUpdaterBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::IndoorTileAnimationBehavior> {
    struct IndoorTileAnimationBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::LabelingUpdateListener> {
    struct LabelingUpdateListener *ptr_;
};

struct reffed_ptr<(anonymous namespace)::PointsBehavior> {
    struct PointsBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::StickerBehavior> {
    struct StickerBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::UpdateMyLocationBehavior> {
    struct UpdateMyLocationBehavior *ptr_;
};

struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::BaseEntity>;

struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *ptr_;
};

struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
};

struct reffed_ptr<gmscore::renderer::Entity> {
    struct Entity *ptr_;
};

struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
};

struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
};

struct reffed_ptr<gmscore::renderer::PolygonState>;

struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
};

struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
};

struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
};

struct reffed_ptr<gmscore::renderer::ios::BlockBasedBehavior> {
    struct BlockBasedBehavior *ptr_;
};

struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
};

struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
};

struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAreaGroup> {
    struct GLAreaGroup *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingGroupFadeBehavior> {
    struct GLBuildingGroupFadeBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::GLFeatureGroup>;

struct reffed_ptr<gmscore::vector::GLLabel> {
    struct GLLabel *ptr_;
};

struct reffed_ptr<gmscore::vector::GLLineGroup>;

struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
};

struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSStippleTexture> {
    struct GMSStippleTexture *_field1;
};

struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSTexturedStrokeShaderState> {
    struct GMSTexturedStrokeShaderState *_field1;
};

struct reffed_ptr<gmscore::vector::IconTextureCache> {
    struct IconTextureCache *_field1;
};

struct reffed_ptr<gmscore::vector::LabelBucketRestriction> {
    struct LabelBucketRestriction *_field1;
};

struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
};

struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *_field1;
};

struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior> {
    struct LabelingBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<bool>> {
    struct ModelRendererValue<bool> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<float>> {
    struct ModelRendererValue<float> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<unsigned int>> {
    struct ModelRendererValue<unsigned int> *ptr_;
};

struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
};

struct reffed_ptr<gmscore::vector::StrokeTextureCache> {
    struct StrokeTextureCache *_field1;
};

struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
};

struct reffed_ptr<gmscore::vector::TileLabelProvider> {
    struct TileLabelProvider *ptr_;
};

struct reverb_params {
    int _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    _Bool _field10;
    _Bool _field11;
};

struct rusage;

struct scoped_nsobject<CRWHTTPStreamDelegate> {
    id _field1;
};

struct scoped_nsobject<NSArray> {
    NSArray *object_;
};

struct scoped_nsobject<NSMutableArray> {
    NSMutableArray *object_;
};

struct scoped_nsobject<NSMutableURLRequest> {
    id _field1;
};

struct scoped_nsobject<NSString> {
    NSString *object_;
};

struct scoped_nsobject<Protocol> {
    Protocol *object_;
};

struct scoped_nsprotocol<id<CRNHTTPProtocolHandlerProxy>> {
    id object_;
};

struct scoped_refptr<TTFetcherDelegate> {
    struct TTFetcherDelegate *ptr_;
};

struct scoped_refptr<avframework::AudioTrackInterface> {
    struct AudioTrackInterface *ptr_;
};

struct scoped_refptr<avframework::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
};

struct scoped_refptr<avframework::MediaEngineFactoryInterface> {
    struct MediaEngineFactoryInterface *ptr_;
};

struct scoped_refptr<avframework::ObjcAudioTrackSource> {
    struct ObjcAudioTrackSource *ptr_;
};

struct scoped_refptr<avframework::ObjcVideoTrackSource> {
    struct ObjcVideoTrackSource *ptr_;
};

struct scoped_refptr<avframework::RTMPTransportInterface> {
    struct RTMPTransportInterface *ptr_;
};

struct scoped_refptr<avframework::VideoFrameBuffer> {
    struct VideoFrameBuffer *_field1;
};

struct scoped_refptr<avframework::VideoTrackInterface> {
    struct VideoTrackInterface *ptr_;
};

struct scoped_refptr<base::SequencedTaskRunner> {
    struct SequencedTaskRunner *_field1;
};

struct scoped_refptr<base::SingleThreadTaskRunner> {
    struct SingleThreadTaskRunner *_field1;
};

struct scoped_refptr<base::WeakContainer> {
    struct WeakContainer *ptr_;
};

struct scoped_refptr<base::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct scoped_refptr<const base::internal::WeakReference::Flag> {
    struct Flag *_field1;
};

struct scoped_refptr<net::AuthChallengeInfo> {
    struct AuthChallengeInfo *_field1;
};

struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
};

struct scoped_refptr<net::HttpResponseHeaders> {
    struct HttpResponseHeaders *_field1;
};

struct scoped_refptr<net::IOBuffer> {
    struct IOBuffer *_field1;
};

struct scoped_refptr<net::IOBufferWithSize> {
    struct IOBufferWithSize *_field1;
};

struct scoped_refptr<net::SSLCertRequestInfo> {
    struct SSLCertRequestInfo *_field1;
};

struct scoped_refptr<net::URLRequestContextGetter> {
    struct URLRequestContextGetter *_field1;
};

struct scoped_refptr<net::X509Certificate> {
    struct X509Certificate *_field1;
};

struct session;

struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
    struct __tree<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSOverlay *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<GMSOverlay *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
    struct __tree<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::FeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::FeatureID>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
    struct __tree<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::IndoorID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::IndoorID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
    struct __tree<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSEntityTappableUIItem>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, gmscore::vector::TappableMapItemQueue::TappableItemsCompare> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PushObserver> {
    struct PushObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::CoreBase> {
    struct CoreBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::HandlePool> {
    struct HandlePool *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<WCDB::HandleWrap> {
    struct HandleWrap *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::StatementHandle> {
    struct StatementHandle *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCDB::Ticker> {
    struct Ticker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WCTColumnBinding> {
    struct WCTColumnBinding *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<c::b::ws::CallbackObject> {
    struct CallbackObject *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<c::b::ws::PushManager::ConnectionParams> {
    struct ConnectionParams *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<c::b::ws::PushManager> {
    struct PushManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::Instance> {
    struct Instance *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::RCTMessageThread> {
    struct RCTMessageThread *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct list<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>>> {
    struct list<std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::allocator<std::__1::shared_ptr<WCTConstraintBindingBase>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::mutex> {
    struct mutex *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>> {
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>> {
    struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sigacts;

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stack<GMSEntityTapClassStatusSet, std::__1::deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>>> {
    struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> c;
};

struct stream_engine {
    void *_field1;
    void *_field2;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct timeval {
    long long _field1;
    int _field2;
};

struct tuple<int, int, int, unsigned int, unsigned int> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, int, int, int, unsigned int, unsigned int> {
        int _field1;
        int _field2;
        int _field3;
        unsigned int _field4;
        unsigned int _field5;
    } _field1;
};

struct tuple<int, int, unsigned int> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2>, int, int, unsigned int> {
        int value;
        int value;
        unsigned int value;
    } base_;
};

struct type {
    unsigned char __lx[24];
};

struct ucred;

struct unique_ptr<(anonymous namespace)::ViewRenderTargetChangedSizeListener, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
    struct __compressed_pair<(anonymous namespace)::ViewRenderTargetChangedSizeListener *, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
        struct ViewRenderTargetChangedSizeListener *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::IconRenderer, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::IconRenderer *, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
        struct IconRenderer *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::Renderer, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Renderer *, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
        struct Renderer *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
    struct __compressed_pair<GMSx_gmm_photo::api::SchedulingService *, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
        struct SchedulingService *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
        struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IVIOSGLContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IVIOSGLContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
        struct IVIOSGLContext *__first_;
    } __ptr_;
};

struct unique_ptr<GURL, std::__1::default_delete<GURL>> {
    struct __compressed_pair<GURL *, std::__1::default_delete<GURL>> {
        struct GURL *_field1;
    } _field1;
};

struct unique_ptr<LiveCore::IMixerInterface, std::__1::default_delete<LiveCore::IMixerInterface>> {
    struct __compressed_pair<LiveCore::IMixerInterface *, std::__1::default_delete<LiveCore::IMixerInterface>> {
        struct IMixerInterface *__value_;
    } __ptr_;
};

struct unique_ptr<MediaEngineObserver, std::__1::default_delete<MediaEngineObserver>> {
    struct __compressed_pair<MediaEngineObserver *, std::__1::default_delete<MediaEngineObserver>> {
        struct MediaEngineObserver *__value_;
    } __ptr_;
};

struct unique_ptr<ObserverInterface, std::__1::default_delete<ObserverInterface>> {
    struct __compressed_pair<ObserverInterface *, std::__1::default_delete<ObserverInterface>> {
        struct ObserverInterface *__value_;
    } __ptr_;
};

struct unique_ptr<RtmpOBServer, std::__1::default_delete<RtmpOBServer>> {
    struct __compressed_pair<RtmpOBServer *, std::__1::default_delete<RtmpOBServer>> {
        struct RtmpOBServer *__value_;
    } __ptr_;
};

struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> {
    struct __compressed_pair<_00509::_00206::_00716 *, std::__1::default_delete<_00509::_00206::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> {
    struct __compressed_pair<_00509::_00445::_00716 *, std::__1::default_delete<_00509::_00445::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<avframework::GlSurfaceHelper, std::__1::default_delete<avframework::GlSurfaceHelper>> {
    struct __compressed_pair<avframework::GlSurfaceHelper *, std::__1::default_delete<avframework::GlSurfaceHelper>> {
        struct GlSurfaceHelper *__value_;
    } __ptr_;
};

struct unique_ptr<avframework::MediaEngineInterface::MediaEncodeStreamInterface, std::__1::default_delete<avframework::MediaEngineInterface::MediaEncodeStreamInterface>> {
    struct __compressed_pair<avframework::MediaEngineInterface::MediaEncodeStreamInterface *, std::__1::default_delete<avframework::MediaEngineInterface::MediaEncodeStreamInterface>> {
        struct MediaEncodeStreamInterface *__value_;
    } __ptr_;
};

struct unique_ptr<avframework::VideoEncoderFactoryInterface, std::__1::default_delete<avframework::VideoEncoderFactoryInterface>> {
    struct __compressed_pair<avframework::VideoEncoderFactoryInterface *, std::__1::default_delete<avframework::VideoEncoderFactoryInterface>> {
        struct VideoEncoderFactoryInterface *__value_;
    } __ptr_;
};

struct unique_ptr<avframework::VideoSinkInterface<avframework::VideoFrame>, std::__1::default_delete<avframework::VideoSinkInterface<avframework::VideoFrame>>> {
    struct __compressed_pair<avframework::VideoSinkInterface<avframework::VideoFrame>*, std::__1::default_delete<avframework::VideoSinkInterface<avframework::VideoFrame>>> {
        struct VideoSinkInterface<avframework::VideoFrame> *__value_;
    } __ptr_;
};

struct unique_ptr<base::PowerMonitor, std::__1::default_delete<base::PowerMonitor>> {
    struct __compressed_pair<base::PowerMonitor *, std::__1::default_delete<base::PowerMonitor>> {
        struct PowerMonitor *_field1;
    } _field1;
};

struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> {
    struct __compressed_pair<base::Thread *, std::__1::default_delete<base::Thread>> {
        struct Thread *_field1;
    } _field1;
};

struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
};

struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
        struct Method *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::dash::CookieStore, std::__1::default_delete<gmscore::dash::CookieStore>> {
    struct __compressed_pair<gmscore::dash::CookieStore *, std::__1::default_delete<gmscore::dash::CookieStore>> {
        struct CookieStore *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::model::CollidableSet2D, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
    struct __compressed_pair<gmscore::model::CollidableSet2D *, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
        struct CollidableSet2D *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::EntityRenderer, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
    struct __compressed_pair<gmscore::renderer::EntityRenderer *, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
        struct EntityRenderer *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::GMSx_Time, std::__1::default_delete<gmscore::renderer::GMSx_Time>> {
    struct __compressed_pair<gmscore::renderer::GMSx_Time *, std::__1::default_delete<gmscore::renderer::GMSx_Time>> {
        struct GMSx_Time *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
};

struct unique_ptr<gmscore::renderer::ios::IOSGLState, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
    struct __compressed_pair<gmscore::renderer::ios::IOSGLState *, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
        struct IOSGLState *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::MutableStateTracker, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
    struct __compressed_pair<gmscore::vector::MutableStateTracker *, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
        struct MutableStateTracker *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::StrokeTextureCache, std::__1::default_delete<gmscore::vector::StrokeTextureCache>> {
    struct __compressed_pair<gmscore::vector::StrokeTextureCache *, std::__1::default_delete<gmscore::vector::StrokeTextureCache>> {
        struct StrokeTextureCache *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::TextureCache, std::__1::default_delete<gmscore::vector::TextureCache>> {
    struct __compressed_pair<gmscore::vector::TextureCache *, std::__1::default_delete<gmscore::vector::TextureCache>> {
        struct TextureCache *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::detail::FeatureData, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
    struct __compressed_pair<gmscore::vector::detail::FeatureData *, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
        struct FeatureData *__first_;
    } __ptr_;
};

struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> {
    struct __compressed_pair<net::CertVerifier *, std::__1::default_delete<net::CertVerifier>> {
        struct CertVerifier *_field1;
    } _field1;
};

struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> {
    struct __compressed_pair<net::CookieStore *, std::__1::default_delete<net::CookieStore>> {
        struct CookieStore *_field1;
    } _field1;
};

struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> {
    struct __compressed_pair<net::NetLog *, std::__1::default_delete<net::NetLog>> {
        struct NetLog *_field1;
    } _field1;
};

struct unique_ptr<net::NetworkQualityEstimator, std::__1::default_delete<net::NetworkQualityEstimator>> {
    struct __compressed_pair<net::NetworkQualityEstimator *, std::__1::default_delete<net::NetworkQualityEstimator>> {
        struct NetworkQualityEstimator *_field1;
    } _field1;
};

struct unique_ptr<net::ProxyConfigService, std::__1::default_delete<net::ProxyConfigService>> {
    struct __compressed_pair<net::ProxyConfigService *, std::__1::default_delete<net::ProxyConfigService>> {
        struct ProxyConfigService *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> {
    struct __compressed_pair<net::URLRequestContext *, std::__1::default_delete<net::URLRequestContext>> {
        struct URLRequestContext *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> {
    struct __compressed_pair<net::URLRequestJob *, std::__1::default_delete<net::URLRequestJob>> {
        struct URLRequestJob *_field1;
    } _field1;
};

struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> {
    struct __compressed_pair<net::UploadDataStream *, std::__1::default_delete<net::UploadDataStream>> {
        struct UploadDataStream *_field1;
    } _field1;
};

struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>;

struct unique_ptr<net::WriteToFileNetLogObserver, std::__1::default_delete<net::WriteToFileNetLogObserver>> {
    struct __compressed_pair<net::WriteToFileNetLogObserver *, std::__1::default_delete<net::WriteToFileNetLogObserver>> {
        struct WriteToFileNetLogObserver *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::vector<composer_node_tag_value_t *, std::__1::allocator<composer_node_tag_value_t *>>, std::__1::default_delete<std::__1::vector<composer_node_tag_value_t *, std::__1::allocator<composer_node_tag_value_t *>>>> {
    struct __compressed_pair<std::__1::vector<composer_node_tag_value_t *, std::__1::allocator<composer_node_tag_value_t *>>*, std::__1::default_delete<std::__1::vector<composer_node_tag_value_t *, std::__1::allocator<composer_node_tag_value_t *>>>> {
        struct vector<composer_node_tag_value_t *, std::__1::allocator<composer_node_tag_value_t *>> *__value_;
    } __ptr_;
};

struct unordered_map<AWERxModule *, id<AWERxStoreProtocol>, RxModuleHash, RxModuleEqual, std::__1::allocator<std::__1::pair<AWERxModule *const, id<AWERxStoreProtocol>>>> {
    struct __hash_table<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, std::__1::__unordered_map_hasher<AWERxModule *, std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleHash, true>, std::__1::__unordered_map_equal<AWERxModule *, std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleEqual, true>, std::__1::allocator<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<AWERxModule *, std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<AWERxModule *, std::__1::__hash_value_type<AWERxModule *, id<AWERxStoreProtocol>>, RxModuleEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, AWERxDisposable *, OCStrHash, OCStrEqual, std::__1::allocator<std::__1::pair<NSString *const, AWERxDisposable *>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, AWERxDisposable *>, OCStrHash, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, AWERxDisposable *>, OCStrEqual, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, AWERxDisposable *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, AWERxDisposable *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, AWERxDisposable *>, OCStrHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, AWERxDisposable *>, OCStrEqual, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<std::__1::pair<const gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::FeatureID>, true>, std::__1::__unordered_map_equal<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::FeatureID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::FeatureID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::FeatureID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, GMSIndoorBuildingState *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, GMSIndoorBuildingState *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<int, unsigned long long>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTConstraintBindingBase>>>>;

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<WCTIndexBinding>>>>;

struct unordered_map<unsigned long long, unsigned long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>>> {
    struct __hash_table<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::hash<void *>, true>, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::equal_to<void *>, true>, std::__1::allocator<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::hash<void *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::equal_to<void *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>>> {
    struct __hash_table<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::hash<void *>, true>, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::equal_to<void *>, true>, std::__1::allocator<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::hash<void *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::equal_to<void *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<void *>, true>, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<void *>, true>, std::__1::allocator<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<void *>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<void *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct user;

struct vector<(anonymous namespace)::StringTableEntry, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
    struct StringTableEntry *__begin_;
    struct StringTableEntry *__end_;
    struct __compressed_pair<(anonymous namespace)::StringTableEntry *, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
        struct StringTableEntry *__first_;
    } __end_cap_;
};

struct vector<AWERxDisposable *, std::__1::allocator<AWERxDisposable *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<AWERxDisposable *__strong *, std::__1::allocator<AWERxDisposable *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__value_;
    } __end_cap_;
};

struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
};

struct vector<GMSLazyMultiZoomStyle, std::__1::allocator<GMSLazyMultiZoomStyle>> {
    struct GMSLazyMultiZoomStyle *__begin_;
    struct GMSLazyMultiZoomStyle *__end_;
    struct __compressed_pair<GMSLazyMultiZoomStyle *, std::__1::allocator<GMSLazyMultiZoomStyle>> {
        struct GMSLazyMultiZoomStyle *__first_;
    } __end_cap_;
};

struct vector<GMSOffscreenEntityView *, std::__1::allocator<GMSOffscreenEntityView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<GMSOffscreenEntityView *__strong *, std::__1::allocator<GMSOffscreenEntityView *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
    struct TileTemplate *__begin_;
    struct TileTemplate *__end_;
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate *, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
        struct TileTemplate *__first_;
    } __end_cap_;
};

struct vector<GURL, std::__1::allocator<GURL>> {
    struct GURL *_field1;
    struct GURL *_field2;
    struct __compressed_pair<GURL *, std::__1::allocator<GURL>> {
        struct GURL *_field1;
    } _field3;
};

struct vector<HTSIGListSectionEntry, std::__1::allocator<HTSIGListSectionEntry>> {
    struct HTSIGListSectionEntry *__begin_;
    struct HTSIGListSectionEntry *__end_;
    struct __compressed_pair<HTSIGListSectionEntry *, std::__1::allocator<HTSIGListSectionEntry>> {
        struct HTSIGListSectionEntry *__value_;
    } __end_cap_;
};

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__value_;
    } __end_cap_;
};

struct vector<MiniPBEncodeItem, std::__1::allocator<MiniPBEncodeItem>> {
    struct MiniPBEncodeItem *_field1;
    struct MiniPBEncodeItem *_field2;
    struct __compressed_pair<MiniPBEncodeItem *, std::__1::allocator<MiniPBEncodeItem>> {
        struct MiniPBEncodeItem *_field1;
    } _field3;
};

struct vector<composer_node_tag_value_t *, std::__1::allocator<composer_node_tag_value_t *>>;

struct vector<cronet::URLRequestContextConfig::Pkp *, std::__1::allocator<cronet::URLRequestContextConfig::Pkp *>> {
    struct Pkp **_field1;
    struct Pkp **_field2;
    struct __compressed_pair<cronet::URLRequestContextConfig::Pkp **, std::__1::allocator<cronet::URLRequestContextConfig::Pkp *>> {
        struct Pkp **_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>>> {
    struct reffed_ptr<gmscore::renderer::BaseEntity> *_field1;
    struct reffed_ptr<gmscore::renderer::BaseEntity> *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>>> {
        struct reffed_ptr<gmscore::renderer::BaseEntity> *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::Entity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Entity>>> {
    reffed_ptr_67673b8c *_field1;
    reffed_ptr_67673b8c *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::Entity>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Entity>>> {
        reffed_ptr_67673b8c *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>>> {
    struct reffed_ptr<gmscore::vector::GLFeatureGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::GLFeatureGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>>> {
        struct reffed_ptr<gmscore::vector::GLFeatureGroup> *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    reffed_ptr_3c29ede8 *_field1;
    reffed_ptr_3c29ede8 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        reffed_ptr_3c29ede8 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
        struct reffed_ptr<gmscore::vector::GLLineGroup> *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
    reffed_ptr_799bd618 *_field1;
    reffed_ptr_799bd618 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
        reffed_ptr_799bd618 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_a24f2af8 *__begin_;
    reffed_ptr_a24f2af8 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_a24f2af8 *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
};

struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::IndoorID, std::__1::allocator<gmscore::model::IndoorID>> {
    struct IndoorID *__begin_;
    struct IndoorID *__end_;
    struct __compressed_pair<gmscore::model::IndoorID *, std::__1::allocator<gmscore::model::IndoorID>> {
        struct IndoorID *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> {
    struct LabelElement *__begin_;
    struct LabelElement *__end_;
    struct __compressed_pair<gmscore::model::LabelElement *, std::__1::allocator<gmscore::model::LabelElement>> {
        struct LabelElement *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Rectangle2D, std::__1::allocator<gmscore::model::Rectangle2D>> {
    struct Rectangle2D *__begin_;
    struct Rectangle2D *__end_;
    struct __compressed_pair<gmscore::model::Rectangle2D *, std::__1::allocator<gmscore::model::Rectangle2D>> {
        struct Rectangle2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> {
    struct Triangle2D *__begin_;
    struct Triangle2D *__end_;
    struct __compressed_pair<gmscore::model::Triangle2D *, std::__1::allocator<gmscore::model::Triangle2D>> {
        struct Triangle2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::TriangleList2D, std::__1::allocator<gmscore::model::TriangleList2D>> {
    struct TriangleList2D *__begin_;
    struct TriangleList2D *__end_;
    struct __compressed_pair<gmscore::model::TriangleList2D *, std::__1::allocator<gmscore::model::TriangleList2D>> {
        struct TriangleList2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__first_;
    } __end_cap_;
};

struct vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> {
    struct PendingOp *_field1;
    struct PendingOp *_field2;
    struct __compressed_pair<gmscore::renderer::EntityRenderer::PendingOp *, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> {
        struct PendingOp *_field1;
    } _field3;
};

struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
};

struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__first_;
    } __end_cap_;
};

struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__first_;
    } __end_cap_;
};

struct vector<gmscore::vector::GLStrokeLayer::LineAttributeInfo, std::__1::allocator<gmscore::vector::GLStrokeLayer::LineAttributeInfo>> {
    struct LineAttributeInfo *_field1;
    struct LineAttributeInfo *_field2;
    struct __compressed_pair<gmscore::vector::GLStrokeLayer::LineAttributeInfo *, std::__1::allocator<gmscore::vector::GLStrokeLayer::LineAttributeInfo>> {
        struct LineAttributeInfo *_field1;
    } _field3;
};

struct vector<gmscore::vector::MutableStateTracker *, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
    struct MutableStateTracker **__begin_;
    struct MutableStateTracker **__end_;
    struct __compressed_pair<gmscore::vector::MutableStateTracker **, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
        struct MutableStateTracker **__first_;
    } __end_cap_;
};

struct vector<id, std::__1::allocator<id>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<id *, std::__1::allocator<id>> {
        id *__value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<mammon::RingBufferX<float>, std::__1::allocator<mammon::RingBufferX<float>>> {
    struct RingBufferX<float> *_field1;
    struct RingBufferX<float> *_field2;
    struct __compressed_pair<mammon::RingBufferX<float>*, std::__1::allocator<mammon::RingBufferX<float>>> {
        struct RingBufferX<float> *_field1;
    } _field3;
};

struct vector<net::DispatchActionInfo, std::__1::allocator<net::DispatchActionInfo>> {
    struct DispatchActionInfo *_field1;
    struct DispatchActionInfo *_field2;
    struct __compressed_pair<net::DispatchActionInfo *, std::__1::allocator<net::DispatchActionInfo>> {
        struct DispatchActionInfo *_field1;
    } _field3;
};

struct vector<net::HashValue, std::__1::allocator<net::HashValue>> {
    struct HashValue *_field1;
    struct HashValue *_field2;
    struct __compressed_pair<net::HashValue *, std::__1::allocator<net::HashValue>> {
        struct HashValue *_field1;
    } _field3;
};

struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
    struct HeaderKeyValuePair *_field1;
    struct HeaderKeyValuePair *_field2;
    struct __compressed_pair<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
        struct HeaderKeyValuePair *_field1;
    } _field3;
};

struct vector<net::IPEndPoint, std::__1::allocator<net::IPEndPoint>> {
    struct IPEndPoint *_field1;
    struct IPEndPoint *_field2;
    struct __compressed_pair<net::IPEndPoint *, std::__1::allocator<net::IPEndPoint>> {
        struct IPEndPoint *_field1;
    } _field3;
};

struct vector<net::RedirectInfo, std::__1::allocator<net::RedirectInfo>> {
    struct RedirectInfo *_field1;
    struct RedirectInfo *_field2;
    struct __compressed_pair<net::RedirectInfo *, std::__1::allocator<net::RedirectInfo>> {
        struct RedirectInfo *_field1;
    } _field3;
};

struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
    struct SignedCertificateTimestampAndStatus *_field1;
    struct SignedCertificateTimestampAndStatus *_field2;
    struct __compressed_pair<net::SignedCertificateTimestampAndStatus *, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
        struct SignedCertificateTimestampAndStatus *_field1;
    } _field3;
};

struct vector<objc_method_description, std::__1::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *__begin_;
    short *__end_;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>*, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
        struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>>> {
    vector_a9c0dc88 *__begin_;
    vector_a9c0dc88 *__end_;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>>> {
        vector_a9c0dc88 *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_aa37bc82 *_field1;
    vector_aa37bc82 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_aa37bc82 *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
};

struct vector<void (^)(id, AWERxContext *), std::__1::allocator<void (^)(id, AWERxContext *)>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(id, AWERxContext *), std::__1::allocator<void (^)(id, AWERxContext *)>> {
        CDUnknownBlockType *__value_;
    } __end_cap_;
};

struct vector_ {
    void **_field1;
    int _field2;
    int _field3;
};

struct vmspace {
    int _field1;
    char *_field2;
    int _field3[5];
    char *_field4[3];
};

struct vnode;

struct yam_hashmap_entry;

struct yam_stack_cursor {
    unsigned int _field1;
    struct {
        int _field1;
        _Bool _field2;
    } _field2;
    struct {
        unsigned long long _field1;
    } _field3;
    struct {
        char *_field1;
        unsigned long long _field2;
        char *_field3;
        unsigned long long _field4;
    } _field4;
    _Bool _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    void *_field9[200];
};

#if 0
// Names with conflicting types:
typedef struct ?<int *, std::__1::allocator<int>> {
    int *__first_;
} __compressed_pair_6b9f37ee;

typedef struct ?<int *, std::__1::allocator<int>> {
    int *__value_;
} __compressed_pair_0d3972c5;

typedef struct ?<int *, std::__1::allocator<int>> {
    int *_field1;
} __compressed_pair_3396433f;

typedef struct ?<unsigned int *, std::__1::allocator<unsigned int>> {
    unsigned int *__first_;
} __compressed_pair_3e00c76f;

typedef struct ?<unsigned int *, std::__1::allocator<unsigned int>> {
    unsigned int *__value_;
} __compressed_pair_d84eb7d7;

typedef struct ?<unsigned int *, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
} __compressed_pair_b4d6e7d8;

typedef struct {
    char *_field1;
    unsigned int _field2;
} AudioBufferQueue_4d119941;

typedef struct {
    char *bufferData;
    unsigned int dataSize;
} AudioBufferQueue_1f978939;

typedef struct {
    float *_field1;
    unsigned int _field2;
} AudioBufferQueue_6aac07c0;

typedef struct {
    float *bufferData;
    unsigned int dataSize;
} AudioBufferQueue_b6fe090f;

typedef struct ?<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    __compressed_pair_6b9f37ee __end_cap_;
} vector_e0f2bd7e;

typedef struct ?<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    __compressed_pair_0d3972c5 __end_cap_;
} vector_12bd641b;

typedef struct ?<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
} vector_3203cf93;

typedef struct ?<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    __compressed_pair_3e00c76f __end_cap_;
} vector_a9c0768e;

typedef struct ?<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    __compressed_pair_d84eb7d7 __end_cap_;
} vector_12da65de;

typedef struct ?<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
} vector_f672cb0f;

typedef struct {
    CDUnion_de1179c4 ;
} __rep_7e71a2a1;

typedef struct ?<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
    __rep_7e71a2a1 __first_;
} __compressed_pair_5b4d0e04;

typedef struct ?<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
    __rep_7e71a2a1 __value_;
} __compressed_pair_96848e3b;

typedef struct ?<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
    struct __rep {
        CDUnion_de1179c4 _field1;
    } _field1;
} __compressed_pair_bf4e0c0b;

typedef struct ?<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    __compressed_pair_5b4d0e04 __r_;
} basic_string_a490aa4c;

typedef struct ?<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    __compressed_pair_96848e3b __r_;
} basic_string_90719d97;

typedef struct ?<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            CDUnion_de1179c4 _field1;
        } _field1;
    } _field1;
} basic_string_a396627d;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
} CDStruct_8b55b613;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    unsigned int _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
} CDStruct_c02306e9;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int wifiSent;
    unsigned int wifiReceived;
    unsigned int cellularSent;
    unsigned int cellularReceived;
    unsigned int totalSent;
    unsigned int totalReceived;
} CDStruct_27a12158;

typedef struct {
    unsigned int x;
    unsigned int y;
    unsigned int width;
    unsigned int height;
} CDStruct_0a4f9365;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned int _field1;
    unsigned short _field2;
    unsigned int _field3;
} CDStruct_91b80c38;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_33dcf794;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    unsigned char _field1[4];
    unsigned int _field2;
    unsigned char _field3[4];
    unsigned char _field4[4];
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned char _field12[4];
    unsigned int _field13;
} CDStruct_257a698c;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
} CDStruct_0d2672ab;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_94ca5ecd;

typedef struct {
    void *buffer;
    int length;
    int tail;
    int head;
    int fillCount;
    _Bool atomic;
} CDStruct_c5d49230;

typedef struct {
    double splitColor;
    double splitHeight;
    double fontSize;
    unsigned long long fontColor;
    _Bool isFontBold;
} CDStruct_1245e2bc;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
} CDStruct_4bf883ae;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
} CDStruct_ffb0d7a1;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    int _field5;
} CDStruct_21d8cba1;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    int rate;
    float pregain;
    float threshold;
    float knee;
    float ratio;
    float attack;
    float release;
    float predelay;
    float releasezone1;
    float releasezone2;
    float releasezone3;
    float releasezone4;
    float postgain;
    float wet;
} CDStruct_04160afd;

typedef struct {
    int _field1;
    int _field2;
    float _field3[1500];
} CDStruct_994d301a;

typedef struct {
    int _field1;
    int _field2;
    float _field3[3000];
} CDStruct_81a37205;

typedef struct {
    int _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5[3400];
} CDStruct_ab70ce27;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    char *_field9;
    unsigned int _field10;
    unsigned int _field11;
    _Bool _field12;
} CDStruct_2a089513;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8[3737];
} CDStruct_da94fdca;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9[4200];
    float _field10[3000];
} CDStruct_7a86b279;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15[4600];
    float _field16[2000];
    float _field17[3000];
} CDStruct_18cf4ef0;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    int _field1;
    CDStruct_183601bc *_field2;
} CDStruct_0552ea46;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        int _field9;
        int _field10;
        int _field11;
        int _field12;
        int _field13;
        int _field14;
    } _field10;
} CDStruct_d1583d57;

typedef struct {
    int _field1;
    CDStruct_ffb0d7a1 _field2;
    CDStruct_ffb0d7a1 _field3;
} CDStruct_45d7e37e;

typedef struct {
    CDStruct_c3b9c2ee _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_1b6d18a9 duration;
    CDStruct_1b6d18a9 presentationTimeStamp;
    CDStruct_1b6d18a9 decodeTimeStamp;
} CDStruct_505dd565;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct CGSize _field1;
    unsigned long long _field2;
} CDStruct_5706cf93;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_26e8d939;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
    struct CLLocationCoordinate2D _field3;
    struct CLLocationCoordinate2D _field4;
} CDStruct_165487e6;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

typedef struct {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    float blurness_gaussian;
    struct CGRect face_rect;
    struct CGPoint face_landmarks[7];
    float eye_left_hwratio;
    float eye_right_hwratio;
    float mouth_hwratio;
    float glasses;
    float brightness;
    float integrity;
    int frame_type;
    _Bool not_video;
    float smooth_yaw;
    float smooth_pitch;
    float eye_left_det;
    float eye_right_det;
    float mouth_det;
    float eye_left_occlusion;
    float eye_right_occlusion;
    float mouth_occlusion;
    _Bool eye_blink;
    _Bool mouth_open;
    _Bool pitch3d;
    float quality;
    float smooth_quality;
    _Bool face_too_large;
} CDStruct_e441acf7;

typedef struct {
    struct {
        int _field1[18];
        int _field2[18];
        CDStruct_81a37205 _field3;
        CDStruct_81a37205 _field4;
        CDStruct_81a37205 _field5;
        CDStruct_81a37205 _field6;
        CDStruct_ffb0d7a1 _field7;
        CDStruct_ffb0d7a1 _field8;
        CDStruct_ffb0d7a1 _field9;
        CDStruct_ffb0d7a1 _field10;
        CDStruct_818bb265 _field11;
        CDStruct_818bb265 _field12;
        CDStruct_818bb265 _field13;
        CDStruct_818bb265 _field14;
        float _field15;
        float _field16;
    } _field1;
    CDStruct_45d7e37e _field2;
    CDStruct_45d7e37e _field3;
    CDStruct_869f9c67 _field4;
    CDStruct_869f9c67 _field5;
    struct {
        int _field1;
        float _field2[2048];
    } _field6;
    CDStruct_21d8cba1 _field7;
    CDStruct_818bb265 _field8;
    CDStruct_da94fdca _field9[10];
    CDStruct_da94fdca _field10[10];
    CDStruct_ab70ce27 _field11[4];
    CDStruct_ab70ce27 _field12[4];
    CDStruct_818bb265 _field13;
    CDStruct_818bb265 _field14;
    CDStruct_81a37205 _field15;
    CDStruct_81a37205 _field16;
    CDStruct_ffb0d7a1 _field17;
    CDStruct_ffb0d7a1 _field18;
    CDStruct_ffb0d7a1 _field19;
    CDStruct_ffb0d7a1 _field20;
    CDStruct_818bb265 _field21;
    CDStruct_818bb265 _field22;
    CDStruct_da94fdca _field23;
    CDStruct_da94fdca _field24;
    CDStruct_81a37205 _field25;
    CDStruct_81a37205 _field26;
    CDStruct_da94fdca _field27;
    CDStruct_da94fdca _field28;
    CDStruct_81a37205 _field29;
    CDStruct_81a37205 _field30;
    CDStruct_7a86b279 _field31;
    CDStruct_7a86b279 _field32;
    CDStruct_81a37205 _field33;
    CDStruct_81a37205 _field34;
    CDStruct_18cf4ef0 _field35;
    CDStruct_18cf4ef0 _field36;
    CDStruct_21d8cba1 _field37;
    CDStruct_818bb265 _field38;
    CDStruct_994d301a _field39;
    CDStruct_994d301a _field40;
    CDStruct_ffb0d7a1 _field41;
    CDStruct_ffb0d7a1 _field42;
    CDStruct_81a37205 _field43;
    CDStruct_81a37205 _field44;
    CDStruct_81a37205 _field45;
    CDStruct_81a37205 _field46;
    int _field47[32];
    float _field48;
    float _field49;
    float _field50;
    float _field51;
    float _field52;
    float _field53;
    float _field54;
    float _field55;
    struct {
        int _field1;
        int _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
        float _field10;
        float _field11;
        float _field12;
        float _field13;
        float _field14;
        float _field15;
        float _field16;
        float _field17;
        float _field18;
    } _field56;
} CDStruct_f28d55c5;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
} Callback_118ddb70;

typedef struct STLRange<const std::__1::set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>> {
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field1;
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field2;
} STLRange_8f5356ef;

typedef struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
} STLRange_5fcae3ea;

typedef struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
} STLRange_34380436;

typedef struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
} STLRange_9ddfc5e7;

typedef struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
} STLRange_4dbe973e;

typedef struct STLRange<const std::__1::vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>>> {
    struct __wrap_iter<const gmscore::model::Stroke *> _field1;
    struct __wrap_iter<const gmscore::model::Stroke *> _field2;
} STLRange_53ae3e1a;

typedef struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
} STLRange_5078e726;

typedef struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
} STLRange_20c09f2e;

typedef struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
} STLRange_9491c893;

typedef struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
} STLRange_c62eef92;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct function<bool (std::__1::shared_ptr<WCDB::Handle>&, WCDB::Error &)> {
    struct type _field1;
    struct __base<bool (std::__1::shared_ptr<WCDB::Handle>&, WCDB::Error &)> *_field2;
} function_2daecbf0;

typedef struct list<const WCDB::ColumnDef, std::__1::allocator<const WCDB::ColumnDef>> {
    struct __list_node_base<const WCDB::ColumnDef, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::ColumnDef, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_7420e762;

typedef struct list<const WCDB::ColumnIndex, std::__1::allocator<const WCDB::ColumnIndex>> {
    struct __list_node_base<const WCDB::ColumnIndex, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::ColumnIndex, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_1f17ca96;

typedef struct list<const WCDB::TableConstraint, std::__1::allocator<const WCDB::TableConstraint>> {
    struct __list_node_base<const WCDB::TableConstraint, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const WCDB::TableConstraint, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_93ab09fa;

typedef struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __list_node_base<std::__1::basic_string<char>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::basic_string<char>, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_f20de06b;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
} list_20bec4f3;

typedef struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_3c662d74;

typedef struct reffed_ptr<(anonymous namespace)::GLTileUpdaterBehavior> {
    struct GLTileUpdaterBehavior *ptr_;
} reffed_ptr_74d684ff;

typedef struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
} reffed_ptr_737cd738;

typedef struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *ptr_;
} reffed_ptr_f31d11c9;

typedef struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
} reffed_ptr_9dddd61a;

typedef struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
} reffed_ptr_5b7b7427;

typedef struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
} reffed_ptr_23a2d03e;

typedef struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
} reffed_ptr_36a6b36a;

typedef struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
} reffed_ptr_4c2746c7;

typedef struct reffed_ptr<gmscore::renderer::Entity> {
    struct Entity *ptr_;
} reffed_ptr_67673b8c;

typedef struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
} reffed_ptr_c8344b08;

typedef struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
} reffed_ptr_5e8a2241;

typedef struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
} reffed_ptr_08be8c30;

typedef struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
} reffed_ptr_e23c8d60;

typedef struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
} reffed_ptr_b6b7b6c6;

typedef struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
} reffed_ptr_54a4db53;

typedef struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
} reffed_ptr_7371fe81;

typedef struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
} reffed_ptr_6df9c1dc;

typedef struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
} reffed_ptr_a9a59d6a;

typedef struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
} reffed_ptr_33d7f2af;

typedef struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
} reffed_ptr_329922e5;

typedef struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
} reffed_ptr_331440ca;

typedef struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
} reffed_ptr_33eccd4f;

typedef struct reffed_ptr<gmscore::vector::GLAreaGroup> {
    struct GLAreaGroup *ptr_;
} reffed_ptr_3232b67b;

typedef struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
} reffed_ptr_e65f5ec8;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
} reffed_ptr_ee68e0a3;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
} reffed_ptr_4233df6d;

typedef struct reffed_ptr<gmscore::vector::GLLabel> {
    struct GLLabel *ptr_;
} reffed_ptr_3c29ede8;

typedef struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
} reffed_ptr_eca42765;

typedef struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
} reffed_ptr_913e2e02;

typedef struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
} reffed_ptr_484c2754;

typedef struct reffed_ptr<gmscore::vector::LabelBucketRestriction> {
    struct LabelBucketRestriction *_field1;
} reffed_ptr_63fdb79c;

typedef struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
} reffed_ptr_e654501b;

typedef struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
} reffed_ptr_03f800df;

typedef struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
} reffed_ptr_799bd618;

typedef struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
} reffed_ptr_64032976;

typedef struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *_field1;
} reffed_ptr_a24f2af8;

typedef struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
} reffed_ptr_d5e81332;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
} reffed_ptr_fe03a69a;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
} reffed_ptr_1c161f82;

typedef struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
} reffed_ptr_57016b98;

typedef struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
} reffed_ptr_933c1cb6;

typedef struct scoped_refptr<avframework::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
} scoped_refptr_892f76b7;

typedef struct scoped_refptr<base::WeakContainer> {
    struct WeakContainer *ptr_;
} scoped_refptr_b6aac36b;

typedef struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
} scoped_refptr_81e0d7bb;

typedef struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_2a2fc2e1;

typedef struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_91191f7f;

typedef struct set<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_99ab198b;

typedef struct set<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
    struct __tree<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::FeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::FeatureID>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_b907507b;

typedef struct set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
    struct __tree<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::IndoorID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::IndoorID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_83b24b87;

typedef struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_7b7d70f4;

typedef struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_b4d22a2d;

typedef struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f23710bc;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<PushObserver> {
    struct PushObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0641447b;

typedef struct shared_ptr<WCDB::CoreBase> {
    struct CoreBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_43d981cc;

typedef struct shared_ptr<WCTColumnBinding> {
    struct WCTColumnBinding *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_5c23a9a8;

typedef struct shared_ptr<c::b::ws::CallbackObject> {
    struct CallbackObject *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_51069d86;

typedef struct shared_ptr<c::b::ws::PushManager::ConnectionParams> {
    struct ConnectionParams *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_779fcb27;

typedef struct shared_ptr<c::b::ws::PushManager> {
    struct PushManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_83e2db89;

typedef struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7c4996dd;

typedef struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8e97821c;

typedef struct shared_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a67c817a;

typedef struct shared_ptr<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6eb7ad64;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__first_;
    } __ptr_;
} unique_ptr_a2201ac9;

typedef struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
} unique_ptr_0e0e1873;

typedef struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__value_;
    } __ptr_;
} unique_ptr_bcc8199d;

typedef struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
} unique_ptr_c2a19896;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__first_;
    } __end_cap_;
} vector_1961437c;

typedef struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
} vector_04a19197;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__first_;
    } __end_cap_;
} vector_bbf33a47;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    reffed_ptr_3c29ede8 *_field1;
    reffed_ptr_3c29ede8 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        reffed_ptr_3c29ede8 *_field1;
    } _field3;
} vector_fe8c6592;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
        struct reffed_ptr<gmscore::vector::GLLineGroup> *__first_;
    } __end_cap_;
} vector_f78b1800;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
} vector_8e13786b;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_a24f2af8 *__begin_;
    reffed_ptr_a24f2af8 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_a24f2af8 *__first_;
    } __end_cap_;
} vector_a9c0dc88;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
} vector_4b334fea;

typedef struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__first_;
    } __end_cap_;
} vector_ac2b163d;

typedef struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__first_;
    } __end_cap_;
} vector_ed1e7c9d;

typedef struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__first_;
    } __end_cap_;
} vector_d3954caf;

typedef struct vector<gmscore::model::IndoorID, std::__1::allocator<gmscore::model::IndoorID>> {
    struct IndoorID *__begin_;
    struct IndoorID *__end_;
    struct __compressed_pair<gmscore::model::IndoorID *, std::__1::allocator<gmscore::model::IndoorID>> {
        struct IndoorID *__first_;
    } __end_cap_;
} vector_d74feb1a;

typedef struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__first_;
    } __end_cap_;
} vector_1d953e31;

typedef struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__first_;
    } __end_cap_;
} vector_aa37bc82;

typedef struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__first_;
    } __end_cap_;
} vector_b547f507;

typedef struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__first_;
    } __end_cap_;
} vector_57c59ce3;

typedef struct vector<gmscore::model::TriangleList2D, std::__1::allocator<gmscore::model::TriangleList2D>> {
    struct TriangleList2D *__begin_;
    struct TriangleList2D *__end_;
    struct __compressed_pair<gmscore::model::TriangleList2D *, std::__1::allocator<gmscore::model::TriangleList2D>> {
        struct TriangleList2D *__first_;
    } __end_cap_;
} vector_7f9db2f5;

typedef struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__first_;
    } __end_cap_;
} vector_1a85bb8f;

typedef struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
} vector_ef47c132;

typedef struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__first_;
    } __end_cap_;
} vector_6e37a17d;

typedef struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__first_;
    } __end_cap_;
} vector_8183c344;

typedef struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__first_;
    } __end_cap_;
} vector_c1c297d2;

typedef struct vector<objc_method_description, std::__1::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
} vector_71df529e;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
} vector_9492931a;

typedef struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_aa37bc82 *_field1;
    vector_aa37bc82 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_aa37bc82 *_field1;
    } _field3;
} vector_f04d5db1;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
} vector_a3426c4e;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
} vector_eef16772;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector4 {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
    CDStruct_818bb265 _field3;
    float _field4[4];
};

union ntpTime {
    struct {
        unsigned int fractSeconds;
        unsigned int wholeSeconds;
    } partials;
    unsigned long long floating;
};

#pragma mark Typedef'd Unions

typedef union {
    struct __long {
        char *__data_;
        unsigned long long __size_;
        unsigned long long __cap_;
    } __l;
    struct __short {
        char __data_[23];
        struct {
            unsigned char __size_;
        } ;
    } __s;
    struct __raw __r;
} CDUnion_de1179c4;

// Ambiguous groups
typedef union {
    _Bool _field1;
    int _field2;
    long long _field3;
    unsigned int _field4;
    unsigned long long _field5;
    float _field6;
    double _field7;
    id _field8;
    id _field9;
    id _field10;
    int _field11;
} CDUnion_cf1021d0;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GMSx_GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_7ae79ea2;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

